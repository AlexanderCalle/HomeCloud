[{"/Users/alexander/Documents/developing/HomeCloud/frontend/src/index.js":"1","/Users/alexander/Documents/developing/HomeCloud/frontend/src/reportWebVitals.js":"2","/Users/alexander/Documents/developing/HomeCloud/frontend/src/App.js":"3","/Users/alexander/Documents/developing/HomeCloud/frontend/src/PrivateRoute.js":"4","/Users/alexander/Documents/developing/HomeCloud/frontend/src/socketContext.js":"5","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/myProfile.js":"6","/Users/alexander/Documents/developing/HomeCloud/frontend/src/context/auth.js":"7","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/home.js":"8","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/login.js":"9","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/register.js":"10","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/ChatsPage.js":"11","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/shared.js":"12","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/friendsPage.js":"13","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/emailForm.js":"14","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/digitForm.js":"15","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/newPassword.js":"16","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/FilesPage.js":"17","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/folders.js":"18","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/Media.js":"19","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/profile.js":"20","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/transition.js":"21","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/ChatPage.js":"22","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/sharedFileSlecting.js":"23","/Users/alexander/Documents/developing/HomeCloud/frontend/src/hooks/useFileDownloader.js":"24","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/NavBar.js":"25","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/files.js":"26","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/SelectingFiles.js":"27","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/Message.js":"28","/Users/alexander/Documents/developing/HomeCloud/frontend/src/hooks/useFileUpload.js":"29","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/Downloader.js":"30","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/ProgressBar.js":"31","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/CircleProgress.js":"32"},{"size":500,"mtime":1620120039699,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1607685016440,"results":"35","hashOfConfig":"34"},{"size":2453,"mtime":1625045898582,"results":"36","hashOfConfig":"34"},{"size":447,"mtime":1607857477500,"results":"37","hashOfConfig":"34"},{"size":460,"mtime":1625045898588,"results":"38","hashOfConfig":"34"},{"size":550,"mtime":1614199765960,"results":"39","hashOfConfig":"34"},{"size":162,"mtime":1607855858330,"results":"40","hashOfConfig":"34"},{"size":14567,"mtime":1625045898587,"results":"41","hashOfConfig":"34"},{"size":4699,"mtime":1665227428677,"results":"42","hashOfConfig":"34"},{"size":4770,"mtime":1665226722047,"results":"43","hashOfConfig":"34"},{"size":15697,"mtime":1665226722044,"results":"44","hashOfConfig":"34"},{"size":14628,"mtime":1625045898587,"results":"45","hashOfConfig":"34"},{"size":11653,"mtime":1616092414800,"results":"46","hashOfConfig":"34"},{"size":4766,"mtime":1620719131195,"results":"47","hashOfConfig":"34"},{"size":2869,"mtime":1615206561071,"results":"48","hashOfConfig":"34"},{"size":3805,"mtime":1615206725188,"results":"49","hashOfConfig":"34"},{"size":37712,"mtime":1665591499264,"results":"50","hashOfConfig":"34"},{"size":2637,"mtime":1614949471405,"results":"51","hashOfConfig":"34"},{"size":3298,"mtime":1625045898583,"results":"52","hashOfConfig":"34"},{"size":17186,"mtime":1665226722043,"results":"53","hashOfConfig":"34"},{"size":3064,"mtime":1607787462800,"results":"54","hashOfConfig":"34"},{"size":8632,"mtime":1665226722034,"results":"55","hashOfConfig":"34"},{"size":4209,"mtime":1614098895650,"results":"56","hashOfConfig":"34"},{"size":835,"mtime":1614846951744,"results":"57","hashOfConfig":"34"},{"size":46459,"mtime":1665591389504,"results":"58","hashOfConfig":"34"},{"size":4287,"mtime":1625045898584,"results":"59","hashOfConfig":"34"},{"size":5770,"mtime":1620719131190,"results":"60","hashOfConfig":"34"},{"size":4008,"mtime":1665226722040,"results":"61","hashOfConfig":"34"},{"size":7456,"mtime":1625045898585,"results":"62","hashOfConfig":"34"},{"size":8292,"mtime":1615231028810,"results":"63","hashOfConfig":"34"},{"size":1682,"mtime":1610306073960,"results":"64","hashOfConfig":"34"},{"size":1714,"mtime":1610398382870,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"kk8pj0",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"68"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/alexander/Documents/developing/HomeCloud/frontend/src/index.js",[],["148","149"],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/reportWebVitals.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/App.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/PrivateRoute.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/socketContext.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/myProfile.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/context/auth.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/home.js",["150","151"],"import React from 'react';\nimport '../index.css';\nimport axios from 'axios';\nimport NavBar from '../components/NavBar';\nimport FolderList from '../components/folders';\n\nfunction Home() {\n\n    const [isfolderWarning, setFoldernameWarning] = React.useState(false);\n    const [folderId, setFolderId] = React.useState(\"\");\n    const [searchValue, setSearchValue] = React.useState(\"\");\n    const token = JSON.parse(localStorage.getItem('tokens'));\n    const [foldersFound, setFoldersFound] = React.useState([]);\n    const [filesFound, setFilesFound] = React.useState([]);\n    const [fileshow, setFileshow] = React.useState(false);\n    const [grid, setGrid] = React.useState(true);\n\n    const [file, setFile] = React.useState({\n        name: null,\n        file: null,\n        filename: null,\n        is_image: false,\n        created: null\n      });    \n\n    function deleteFolder(e) {\n        e.preventDefault();\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/folders/deletefolder/${folderId}`)\n          .then(async res => {\n            if(res.status === 200) {\n              window.location.reload();\n            }\n          })\n      }\n\n    function onChange(e) {\n        console.log(e.target.value);\n        setSearchValue(e.target.value);\n        if(e.target.value !== '') {\n            axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/search/find/file/folders/${token.id}/${e.target.value}`)\n            .then(response => {\n                if(response.status === 200) {\n                    setFoldersFound(response.data.folders);\n                    setFilesFound(response.data.files);\n                }\n            })\n        } else {\n            setFoldersFound([]);\n            setFilesFound([])\n        }\n    }\n\n    function fileShowing(filePath, fileName, is_image, fileId, created) {\n        const time = created.split('T')[1]\n        setFileshow(!fileshow);\n        setFile({\n          name: fileName,\n          file: filePath,\n          is_image: is_image,\n          fileId: fileId,\n          created: created.split('T')[0] + \" \" + time.split('.')[0]\n        })\n      }\n\n    return (\n        <div className='flex flex-row h-screen bg-gray-100'>\n            <NavBar page={\"folder\"} />\n            <div className='flex-auto bg-white'>\n                <div className=\"w-full h-full flex flex-col p-6 space-y-4\">\n                    <div className=\"flex-none h-16 flex flex-row justify-between items-center border-b\">\n                        <div className=\"flex flex-row items-end space-x-4\">\n                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n                            <input className=\"outline-none sm:w-96 w-5/6 p-0 text-md\" value={searchValue} onChange={(e) => onChange(e)} type=\"text\" placeholder=\"Search...\" />\n                        </div>\n                        <div className=\"flex flex-row items-end space-x-2\">\n                            <button className=\"focus:outline-none\" onClick={()=> setGrid(!grid)}>\n                                {!grid ? \n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"></path></svg>\n                                :\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 10h16M4 14h16M4 18h16\"></path></svg>\n                                }\n                            </button>\n                            <button className=\"focus:outline-none\">\n                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path></svg>   \n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"overflow-y-auto\">\n                        {filesFound.length === 0 && foldersFound.length === 0 ? (\n                            <>\n                                <h1 className=\"mt-4 text-xl font-bold\">My folders</h1>\n                                {\n                                    grid ? (\n                                        <div className=\"mt-4 flex-auto overflow-y-auto grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4\">\n                                            <FolderList setFoldernameWarning={setFoldernameWarning} setFolderId={setFolderId} />\n                                        </div>\n                                    ): (\n                                        <div className=\"mt-4 flex-auto overflow-y-auto flex flex-col w-full space-y-4\">\n                                            <FolderList setFoldernameWarning={setFoldernameWarning} setFolderId={setFolderId} />\n                                        </div>\n                                    )\n                                }\n                            </>\n                        ) : (\n                            <>\n                            <h1 className=\"mt-4 text-xl font-bold\">Items Found</h1>\n                            <div className=\"mt-4 flex-auto overflow-y-auto grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4\">\n                                {foldersFound.map(folder => (\n                                    <a className=\"block cursor-pointer border border-gray-400 rounded-md shadow-md hover:border-cornblue-400 hover:bg-cornblue-200 hover:text-white\" href={`/collection/folder/${folder.name}/${folder.folder_id}`}>\n                                            <div className=\"p-3 space-y-4\">\n                                            <div className=\"flex flex-row items-center space-x-2 overflow-hidden\">\n                                                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"></path></svg>\n                                                <strong className=\"flex-grow font-normal\">{folder.name}</strong>\n                                            </div>\n                                        </div>\n                                    </a> \n                                ))}\n                                {filesFound.map((file => {\n                                    return (\n                                        <div className=\"block cursor-pointer border border-gray-400 rounded-md shadow-md hover:border-cornblue-400 hover:bg-cornblue-200 hover:text-white overflow-hidden\">\n                                            <div className=\"flex flex-row items-center\">\n                                                <a className=\"flex-auto cursor-pointer\" onClick={() => fileShowing(file.path, file.name, file.is_image, file.file_id, file.created_at)}>\n                                                    <div className=\"p-3 space-y-4\">\n                                                        <div className=\"flex flex-row items-center space-x-2 overflow-hidden\">\n                                                            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                                            <strong className=\"flex-grow text-sm font-normal\">{file.name}</strong>\n                                                        </div>\n                                                    </div>\n                                                </a>\n                                            </div>\n                                        </div>\n                                    )\n                                }))}\n                            </div>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n            <>\n            {isfolderWarning ? (\n                <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                    <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                        <form>\n                        <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                            <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                        </div>\n                        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                            <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                            <div className=\"min-w-0 sm:flex sm:items-start\">\n                                <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                                    <h3 className=\"text-lg leading-6 font-medium text-red-500\" id=\"modal-headline\">\n                                        Warning!\n                                    </h3>\n                                    <div className=\"mt-2\">\n                                        <p>Are you sure you want to delete this folder?</p>\n                                    </div>\n                                </div>\n                            </div>\n                            </div>\n                            <div className=\"flex flew-row bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                            <button type=\"submit\" onClick={(e)=> deleteFolder(e)} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-500 text-base font-medium text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Delete\n                            </button>\n                            <button type=\"button\" onClick={() => setFoldernameWarning(false)} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Cancel\n                            </button>\n                            </div>\n                        </div>\n                        </form>\n                    </div>\n                </div>\n            ) : null}\n            </>\n            <>\n            {fileshow ? (     \n            <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                    <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                        <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                    </div>\n                    <div className=\"flex flex-col justify-between absolute right-0 top-0 h-screen 2xl:w-1/4 pb-4 w-96 text-cornblue-200 bg-white border-l border-r border-gray-400 overflow-y-auto\">\n                        <div>\n                            <div className=\"h-16 bg-cornblue-400 flex flex-row justify-center items-center border-b\">\n                                <button className=\"absolute right-0 pr-2\" onClick={() => setFileshow(false)}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                                </button>\n                                <div className=\"flex-none\">\n                                    <h1 className=\"font-semibold\">{file.name}</h1>\n                                </div>\n                            </div>\n                            <div className=\"w-full flex flex-col p-2 space-y-4 justify-center text-black items-center\">\n                                <div className=\"border-b pb-4\">\n                                {file.is_image ? <img src={'http://' + process.env.REACT_APP_HOST_IP + ':3030' + file.file} /> : <h1>No preview to see</h1>}\n                                </div>\n                                <div className=\"-mt-4 w-full border-b pb-4 px-4 flex flex-col items-start space-y-4\">\n                                <p>Created on: {file.created}</p>\n                                <p>Type file: {file.is_image ? 'Image' : 'Document'}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ) : null}\n            </>\n            {/* <div className='flex flex-row flex-auto bg-white items-center justify-center'>\n                <div className=' flex flex-col space-y-4 bg-white p-5 shadow-lg rounded-lg h-64 w-1/3 justify-center'>\n                    <h1 className='font-bold text-xl text-center'>Open a folder!</h1>\n                    <div className='overflow-y-auto'>\n                        <FolderList />\n                    </div>\n                </div>\n            </div> */}\n        </div>\n    )\n}\n\nexport default Home;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/login.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/register.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/ChatsPage.js",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171"],"import React, {useState, useEffect, useContext } from 'react';\nimport Navbar from '../components/NavBar';\nimport Media from '../components/Media';\nimport '../index.css';\nimport Transition from '../components/transition';\nimport axios from 'axios';\nimport { ChatPage } from '../components/ChatPage';\nimport { useMediaQuery } from 'react-responsive';\nimport { useParams } from 'react-router-dom';\nimport { SocketContext } from '../socketContext';\n\nfunction ChatsPage() {\n\n    const [showFriends, setShowFriends] = useState(true);\n    const [friends, setFriends] = useState(null);\n    const [selectedFriend, setSelectedFriend] = useState(null);\n    const [chatId, setChatId] = useState(null);\n    const [latestMessages, setLatestMessages] = useState([]);\n    const [showFriendInfo, setShowFriendInfo] = useState(false);\n\n    const [idParams, setIdParams] = useState(useParams().chatId);\n    const [idFriend, setIdFriend] = useState(useParams().friendId);\n\n    const token = JSON.parse(localStorage.getItem('tokens'));\n    const socket = useContext(SocketContext)\n    const isStatic = useBreakpoint('1024px');\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/friends/${token.id}`)\n            .then(response => {\n                if(response.status === 200) {\n                    setFriends(response.data);\n\n                    if(idParams != null  && idParams != undefined) {\n                        for(let friend of response.data){\n                            if(idFriend == friend.id){\n                                setSelectedFriend(friend);\n                                handleChat(friend)\n                            }\n                        }\n                    }\n\n                    // setSelectedFriend(response.data[0]);\n                    // handleChat(response.data[0]);\n                }\n            });\n    }, [token.id, idParams]);\n\n    function useBreakpoint(breakpoint) {\n        return useMediaQuery({\n          query: `(min-width: ${breakpoint})`,\n        });\n    }\n\n    document.addEventListener('keydown', function(event){\n        if(event.key === \"Escape\"){\n           setShowFriendInfo(false)\n        }\n      });\n\n    // friend Page\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/getlatestmessages/${token.id}`)\n            .then(response => {\n                if(response.status === 200) {\n                    setLatestMessages(response.data);\n                }\n            })\n    }, [chatId]) // not sure yet\n\n    useEffect(() => {\n        socket.on('latest', () => {\n            console.log('melding');\n            axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/getlatestmessages/${token.id}`)\n            .then(response => {\n                if(response.status === 200) {\n                    setLatestMessages(response.data);\n                }\n            })\n        })\n    }, [])\n\n    function handleChat(friend) {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/getchat/${token.id}/${friend.id}`)\n            .then(response => {\n\n                if(response.status === 200) {\n                    if(idParams != undefined) {\n                        if(response.data.chatId != idParams) window.location = '/chat/' + response.data.chatId + '/' + friend.id;\n                        // // window.location = '/chat/' + response.data.chatId;\n                        setChatId(response.data.chatId)\n                        let chatId = response.data.chatId\n                        let userId = token.id\n\n                        socket.emit('joinchat', {chatId, userId})\n                    } else {\n                        window.location = '/chat/' + response.data.chatId + '/' + friend.id;\n                        // setChatId(response.data.chatId)\n                        // let chatId = response.data.chatId\n                        // let userId = token.id\n                        // socket.emit('joinchat', {chatId, userId})\n                    }\n                    \n                } else if(response.status === 201) {\n        \n                    const data = {\n                        userOne: token.id,\n                        userTwo: friend.id\n                    }\n        \n                    axios.post('http://localhost:3030/chat/makechat', data)\n                        .then(response => {\n                            if(response.status === 200) {\n                                window.location = '/chat/' + response.data.insertId + '/' + friend.id;\n                                setChatId(response.data.insertId)\n                                socket.emit('joinchat', response.data.insertId)\n                            }\n                    })\n                }\n        })\n    }\n\n    return (\n        <div className='flex flex-row h-screen bg-white'>\n            <Navbar page={\"chat\"} />\n\n            <Transition\n                show={isStatic && showFriends || !showFriends && !isStatic}\n                enter=\"transition-all duration-500\"\n                enterFrom=\"md:-ml-80 -ml-96\"\n                enterTo=\"md:ml-0\"\n                leave=\"transition-all duration-500\"\n                leaveTo=\"md:-ml-80 -ml-96\">\n                <div className='pl-20 md:pl-4 absolute md:relative h-screen w-full md:w-80 flex-none bg-white p-4'>\n                    <div className=\"flex flex-col space-y-4\">\n                        <div className=\"flex flex-row flex-none p-4 border-b justify-between items-center mb-6\">\n                            {!isStatic && (\n                                <button onClick={() => setShowFriends(!showFriends)}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                                </button>\n                            )}\n                            <h1 className=\"font-semibold text-xl\">Chat with friends</h1>\n                            <div className=\"space-x-2\">\n                                <button>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"flex-auto overflow-y-auto flex flex-col space-y-3\">\n                            {friends !== null ? (\n                                friends.map(friend => (\n                                    <>\n                                    {friend.id !== token.id ? (\n                                        <a className=\"block border-b cursor-pointer\" onClick={()=> {\n                                            setSelectedFriend(friend);\n                                            handleChat(friend);\n                                            if(!isStatic) {\n                                                setShowFriends(true)\n                                            }\n                                        }}>\n                                            <div className={ selectedFriend !== null ? ( selectedFriend.id == friend.id ? styles.selected : styles.default ) : styles.default}>\n                                                <div className=\"flex flex-row items-center justify-between\">\n                                                    <div className=\"flex flex-row space-x-2\">\n                                                            {friend.profile_pic !== null ? (\n                                                                <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + friend.profile_pic} className=\"object-cover w-12 h-12 rounded-full\" />\n                                                            ) : ( \n                                                                <svg class=\"w-12 h-12\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                                            )}\n                                                        <div className=\"flex flex-col items-start max-h-12 overflow-hidden space-y-0\">\n                                                            <strong className=\"font-semibold\">{friend.firstname} {friend.lastname}</strong>\n                                                            {latestMessages.map((message) => (\n                                                                <>\n                                                                {message.fromUser == friend.id && <p className={message.Status == 0 ? \"font-bold text-gray-500\" : \"font-normal text-gray-500\"}>{message.isImage ? friend.firstname + \" sended a picture\" :  message.message}</p>}\n                                                                {message.toUser == friend.id && <p className=\"text-gray-500\"> {message.isImage ? \"you sended a picture\" : \"you: \" + message.message}</p>}\n                                                                </>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </a>\n                                    ) : null}\n                                    </>\n                                ))\n                            ): (\n                                <p>No Friends yet, send some invites</p>\n                            )}  \n                        </div>\n                    </div>\n                </div>\n            </Transition>\n\n            <div className='h-screen flex flex-row flex-auto bg-white border-l border-r border-gray-400'>\n                <div className=\"w-full flex flex-col p-4\">\n                    {selectedFriend !== undefined && (\n                    <>\n                    <div className=\"flex-none h-16 flex flex-row justify-between items-center border-b\">\n                        <div className=\"flex flex-row space-x-4 items-center\">\n                            <button onClick={() => setShowFriends(!showFriends)}>\n                                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h8m-8 6h16\"></path></svg>\n                            </button>\n                            <h1 className=\"font-bold\">{ selectedFriend !== null && (`${selectedFriend.firstname} ${selectedFriend.lastname}`) }</h1>\n                        </div>\n                        <div>\n                            <button onClick={()=> setShowFriendInfo(true)}>\n                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                            </button>\n                            {/* <button onClick={(e) => handleRemoveFriend(e, selectedFriend.FriendsId)}>\n                                <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 7a4 4 0 11-8 0 4 4 0 018 0zM9 14a6 6 0 00-6 6v1h12v-1a6 6 0 00-6-6zM21 12h-6\"></path></svg>\n                            </button> */}\n                        </div>\n                    </div>\n                    <div className=\"flex-auto h-4/5\">\n                       { selectedFriend !== null ? (<ChatPage chatId={chatId} friendId={selectedFriend.id} />):null}\n                    </div>\n                    </>\n                    )}\n                </div>\n                <>\n                {selectedFriend !== null && (\n                    <>\n                    {showFriendInfo ? (  \n                        <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                                <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                                    <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                                </div>\n                                <div className=\"absolute right-0 top-0 h-screen 2xl:w-1/4 w-96  text-cornblue-200 bg-white border-l border-r border-gray-400 overflow-y-auto\">\n                                    <div className=\"h-16 bg-cornblue-400 flex flex-row justify-center items-center border-b\">\n                                        <button className=\"absolute right-0 pr-2\" onClick={() => setShowFriendInfo(false)}>\n                                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                                        </button>\n                                        <div className=\"flex-none\">\n                                            <h1 className=\"font-semibold\">{selectedFriend.firstname} {selectedFriend.lastname}</h1>\n                                        </div>\n                                    </div>\n                                    <div className=\"px-6 mt-8 flex flex-col items-center space-y-6 justify-center text-black\">\n                                        <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + selectedFriend.profile_pic} className=\"object-cover w-32 h-32 rounded-full\" />\n                                        <p className=\"font-bold text-xl\">{selectedFriend.firstname} {selectedFriend.lastname}</p>\n                                        <div className=\"w-full flex flex-col space-y-2\">\n                                            <div className=\"flex flex-row justify-between border-b\">\n                                                <p>Media</p>\n                                                {/* <button>\n                                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path></svg>\n                                                </button> */}\n                                            </div>\n                                            <Media chatId={chatId} />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ) : null}\n                    </>\n                )}\n                </>\n            </div>\n        </div>\n    )\n}\n\nconst styles = {\n    default: \"border border-gray-400 hover:bg-gray-200 rounded-md  p-3 space-y-4 shadow-md\",\n    selected: \"border rounded-md border-gray-400 bg-gray-200 p-3 space-y-4\"\n}\n\nexport default ChatsPage;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/shared.js",["172","173","174","175","176"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../components/NavBar';\nimport useFileDownloader from '../hooks/useFileDownloader';\nimport SelecingFiles from '../components/sharedFileSlecting';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu'\nimport '../styles/react-contextmenu.css'\nimport '../styles/custom.css'\n\nconst attributes = {\n    className: 'custom-root',\n    disabledClassName: 'custom-disabled',\n    dividerClassName: 'custom-divider',\n    selectedClassName: 'custom-selected'\n}\n\nfunction SharedPage() {\n\n    const token = JSON.parse(localStorage.getItem('tokens'));\n    const [files, setFiles] = useState([]);\n    const [selected, setSelected] = useState({\n        name: null,\n        file: null,\n        filename: null,\n        is_image: false,\n      });\n    const [fileshow, setFileshow] = useState(false);\n    const [selectingFiles, setSelectingFiles] = useState(false);\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [grid, setGrid] = useState(true);\n    const [downloadFile, donwloadfolder,downloaderComponent] = useFileDownloader();\n\n    const download = (file) => downloadFile(file);\n\n\n    function  downloadFunction(name, path, filename, is_image) {\n        const fileDown = {\n        name: name,\n        file: path,\n        filename: filename,\n        is_image: is_image\n        };\n\n        download(fileDown)\n    }\n\n    document.addEventListener('keydown', function(event){\n        if(event.key === \"Escape\"){\n           setFileshow(false)\n        }\n      });\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/files/getshared/${token.id}`)\n            .then((response) => {\n                if(response.status === 200) {\n                    setFiles(response.data);\n                }\n            })\n    }, []);\n\n    function fileShowing(filePath, fileName, is_image, fileId) {\n        setFileshow(!fileshow);\n        setSelected({\n          name: fileName,\n          file: filePath,\n          is_image: is_image,\n          fileId: fileId\n        })\n      }\n\n    function downloadSelected() {\n        selectedFiles.forEach(async file => {\n          download(file)\n        })\n    }\n\n    return (\n        <div className='flex flex-row h-screen bg-gray-100'>\n            <Navbar page={\"shared\"} />\n            <div className='flex-auto bg-white'>\n                <div className=\"w-full h-full flex flex-col p-6\">\n                    <div className=\"flex-none h-16 flex flex-row justify-between items-center border-b\">\n                        <div className=\"flex flex-row items-end space-x-4\">\n                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n                            <input className=\"outline-none sm:w-96 w-5/6 p-0 text-md\" type=\"text\" placeholder=\"Search...\" />\n                        </div>\n                        <div className=\"flex flex-row items-end space-x-2\">\n                            {selectingFiles ? (\n                                <button className=\"focus:outline-none\" onClick={downloadSelected}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg>\n                                </button>\n                            ):null}\n                            <button className=\"focus:outline-none\" onClick={()=> setSelectingFiles(!selectingFiles)}>\n                                <svg class={selectingFiles ? \"w-6 h-6 text-cornblue-400 feather feather-check-circle\" : \"w-6 h-6 feather feather-check-circle\"} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" ><path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path><polyline points=\"22 4 12 14.01 9 11.01\"></polyline></svg>\n                            </button>\n                            <button className=\"focus:outline-none\" onClick={()=> setGrid(!grid)}>\n                                {!grid ? \n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"></path></svg>\n                                :\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 10h16M4 14h16M4 18h16\"></path></svg>\n                                }\n                            </button>\n                            <button className=\"focus:outline-none\">\n                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path></svg>   \n                            </button>\n                        </div>\n                    </div>\n\n                    <div className=\"overflow-y-auto\">\n                        <h1 className=\"mt-4 text-xl font-bold\">Shared with me</h1>\n                        <>\n                        \n                            {!selectingFiles ? (\n                                <>\n                                {\n                                    grid ? (\n                                        <div className=\"mt-4 flex-auto grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4\">\n                                        {files.length > 0 && (\n                                            <>\n                                            {files.map(file => (\n                                                <>\n                                                <ContextMenuTrigger id={file.file_id}>\n                                                    <div className=\"border border-gray-400 rounded-md shadow-md hover:border-cornblue-400 hover:bg-cornblue-200 hover:text-white\" >\n                                                        <div className=\"flex flex-row items-center\">\n                                                            <a className=\"flex-auto cursor-pointer\" onClick={()=> fileShowing(file.path, file.name, file.is_image, file.file_id)}>\n                                                                <div className=\"p-3 space-y-4\">\n                                                                    <div className=\"flex flex-row items-center space-x-2\">\n                                                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                                                        <strong className=\"text-sm font-normal\">{file.name}</strong>\n                                                                    </div>\n                                                                </div>\n                                                            </a>\n                                                        </div>\n                                                    </div>\n                                                </ContextMenuTrigger>\n                                                <ContextMenu id={file.file_id}>\n                                                    <MenuItem\n                                                        data={{ action: 'paste' }}\n                                                        onClick={() => downloadFunction(file.name, file.path, file.name, file.is_image)}\n                                                        attributes={attributes}\n                                                    >\n                                                    Download\n                                                    </MenuItem>\n                                                </ContextMenu>\n                                                </>\n                                            ))}\n                                            </>   \n                                            )}\n                                        </div>\n                                    ) : (\n                                        <div className=\"mt-4 flex-auto flex flex-col w-full space-y-4\">\n                                            {files.length > 0 && (\n                                                <>\n                                                {files.map(file => (\n                                                    <>\n                                                    <ContextMenuTrigger id={file.file_id}>\n                                                        <div className=\"border border-gray-400 rounded-md shadow-md hover:border-cornblue-400 hover:bg-cornblue-200 hover:text-white\" >\n                                                            <div className=\"flex flex-row items-center\">\n                                                                <a className=\"flex-auto cursor-pointer\" onClick={()=> fileShowing(file.path, file.name, file.is_image, file.file_id)}>\n                                                                    <div className=\"p-3 space-y-4\">\n                                                                        <div className=\"flex flex-row items-center space-x-2\">\n                                                                            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                                                            <strong className=\"text-sm font-normal\">{file.name}</strong>\n                                                                        </div>\n                                                                    </div>\n                                                                </a>\n                                                            </div>\n                                                        </div>\n                                                    </ContextMenuTrigger>\n                                                    <ContextMenu id={file.file_id}>\n                                                        <MenuItem\n                                                            data={{ action: 'paste' }}\n                                                            onClick={() => downloadFunction(file.name, file.path, file.name, file.is_image)}\n                                                            attributes={attributes}\n                                                        >\n                                                        Download\n                                                        </MenuItem>\n                                                    </ContextMenu>\n                                                    </>\n                                                ))}\n                                                </>   \n                                                )}\n                                            </div>\n                                    ) \n                                }\n                                </>\n                            ): (\n                                <SelecingFiles setSelected={setSelectedFiles} />\n                            )}\n                        </>\n                    </div>\n                </div>\n                {fileshow ? (     \n                    <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                                <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                            </div>\n                            <div className=\"absolute right-0 top-0 h-screen 2xl:w-1/4 w-96  text-cornblue-200 bg-white border-l border-r border-gray-400 overflow-y-auto\">\n                                <div className=\"h-16 bg-cornblue-400 flex flex-row justify-center items-center border-b\">\n                                    <button className=\"absolute right-0 pr-2\" onClick={() => setFileshow(false)}>\n                                        <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                                    </button>\n                                    <div className=\"flex-none\">\n                                        <h1 className=\"font-semibold\">{selected.name}</h1>\n                                    </div>\n                                </div>\n                                <div className=\"flex flex-col p-2 space-y-8 justify-center items-center\">\n                                    <>\n                                    {selected.is_image ? <img src={'http://' + process.env.REACT_APP_HOST_IP + ':3030' + selected.file} /> : <h1>No preview to see</h1>}\n                                    </>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : null}\n                {downloaderComponent}\n            </div>\n        </div>\n    )\n} \n\nexport default SharedPage;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/friendsPage.js",["177","178","179","180","181","182"],"import React, { useState, useEffect }from 'react';\nimport Navbar from '../components/NavBar';\nimport '../index.css';\nimport axios from 'axios';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu'\nimport '../styles/react-contextmenu.css'\nimport '../styles/custom.css'\n\nconst attributes = {\n    className: 'custom-root',\n    disabledClassName: 'custom-disabled',\n    dividerClassName: 'custom-divider',\n    selectedClassName: 'custom-selected'\n}\n\nfunction FriendsPage() {\n\n    const token = JSON.parse(localStorage.getItem('tokens'));\n    const [friends, setFriends] = useState([]);\n    const [showSearchBar, setShowSearchBar] = useState(false);\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [searchedUsers, setSearchedUsers] = useState(null);\n    const [searhed, setSearched] = useState(false);\n    const [showModalRequest, setShowModalRequest] = useState(false);\n\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/allfriends/${token.id}`)\n            .then((response) => {\n                if (response.status === 200) {\n                    setFriends(response.data);\n                }\n            })\n    }, []);\n\n    function handleChange(e) {\n        setSearchValue(e.target.value);\n\n        if(e.target.value !== \"\") {\n            axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/search/${token.id}/${e.target.value}`)\n            .then((response) => {\n                if (response.status === 200) {\n                    setSearchedUsers(response.data);\n                    setSearched(true)\n                }\n            })\n        } else {\n            setSearched(false)\n        }\n    }\n\n    function sendFriendRequest(friendId) {\n        const data = {\n            userId: token.id,\n            friendId: friendId,\n        }\n\n        axios({method: 'POST', url:`http://${process.env.REACT_APP_HOST_IP}:3030/users/addFriend`, data:data})\n        .then((res) => {\n            if(res.status === 200) {\n                setShowSearchBar(false)\n                setSearched(false)\n                setSearchValue('')\n            }\n        })\n    }\n\n    function handleRemoveFriend(FriendsId) {\n        console.log(FriendsId);\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/deleteFriend/${FriendsId}/${token.id}`)\n            .then((response) => {\n                console.log(response);\n                if(response.status === 200) {\n                    window.location.reload();\n                }\n            })\n    }\n\n    function handleUpdateRequest(e, status, FriendsId) {\n        e.preventDefault()\n        let data;\n        if(status === \"accept\") {\n            data = {Status: 1}\n        } else {\n            data = {Status: 2}\n        }\n        axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/users/updateRequest/${FriendsId}`, data)\n            .then(response => {\n                if(response.status === 200) {\n                    setShowModalRequest(false);\n                    window.location.reload();\n                }\n            })\n    }\n\n    return ( \n        <div className='flex flex-row h-screen bg-gray-100'>\n            <Navbar page={'friends'}/>\n\n            <div className='flex-auto bg-white'>\n                <div className=\"w-full flex flex-col p-6 space-y-4\">\n                    <div className=\"flex flex-col\">\n                        <div className=\"flex-none h-16 flex flex-row justify-between items-center border-b\">\n                            <div className=\"flex flex-row items-end space-x-4\">\n                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n                                <input className=\"outline-none sm:w-96 w-5/6 p-0 text-md\" value={searchValue} onChange={(e) => handleChange(e)} type=\"text\" placeholder=\"Search...\" />\n                            </div>\n                            <div className=\"flex flex-row items-end space-x-2\">\n                                <button className=\"focus:outline-none\">\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"></path></svg>\n                                </button>\n                                <button className=\"focus:outline-none\">\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path></svg>   \n                                </button>\n                            </div>\n\n                            </div>\n                                {searhed && (\n                                    <div className=\"bg-gray-200 p-2 relative w-full z-20 space-y-2\">\n                                    {searchedUsers.length !== 0 ? (\n                                        searchedUsers.map(user => (\n                                            <>\n                                            {token.id !== user.id ? (\n                                                <div className=\"block border-b\">\n                                                <div className={styles.default}>\n                                                    <div className=\"flex flex-row items-center justify-between\">\n                                                        <div className=\"flex flex-row space-x-2\">\n                                                            {user.profile_pic !== null ? (\n                                                                <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + user.profile_pic} className=\"object-cover w-7 h-7 rounded-full\" />\n                                                            ) : ( \n                                                                <svg class=\"w-7 h-7\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                                            )}\n                                                            <strong className=\"flex-grow font-normal\">{user.firstname} {user.lastname}</strong>\n                                                        </div>\n                                                        {user.Status === null || user.Status === 2 ? (\n                                                            <button onClick={()=> sendFriendRequest(user.id)}>\n                                                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\"></path></svg>\n                                                            </button>\n                                                        ) : null}\n                                                        {user.Status === 0 && <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\"></path></svg>}\n                                                        {user.Status === 1 && <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path></svg>}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            ): null}\n                                            </>\n                                        ))\n                                    ) : (\n                                        <p>Nothing has been found</p>\n                                    )} \n                                    </div>\n                                ) }\n                        </div>\n                    <h1 className=\" text-xl font-bold z-0\">My Friends</h1>\n                    <div className=\" z-0 flex-auto overflow-y-auto grid 2xl:grid-cols-4 xl:grid-cols-3 lg:grid-cols-2 grid-cols-1 gap-4\">\n                        {friends.map(friend => (\n                            <>\n                                <ContextMenuTrigger id={friend.id}>\n                                    <div className=\"border border-gray-400 rounded-md shadow-md p-4\">\n                                        <div className=\"flex flex-row items-center space-x-2\">\n                                            {friend.profile_pic !== null ? (\n                                                <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + friend.profile_pic} className=\"object-cover w-16 h-16 rounded-full\" />\n                                            ) : ( \n                                                <svg class=\"w-16 h-16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                            )}\n                                            <div className=\"flex flex-col space-y-0\">\n                                                <strong className=\"text-lg font-medium\">{friend.firstname} {friend.lastname}</strong>\n                                                <p className=\"text-sm font-normal text-gray-500\">{friend.created.split('T')[0]}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </ContextMenuTrigger>\n                                <ContextMenu id={friend.id}>\n                                    <MenuItem\n                                        data={{ action: 'paste' }}\n                                        onClick={() => handleRemoveFriend(friend.id)}\n                                        attributes={attributes}\n                                    >\n                                    Delete Friend\n                                    </MenuItem>\n                                </ContextMenu>\n                            </>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nconst styles = {\n    default: \"border bg-white border-gray-400 hover:bg-gray-200 rounded-md p-3 space-y-4 shadow-md\",\n    selected: \"border rounded-md border-gray-400 bg-gray-200 p-3 space-y-4\"\n}\n\nexport default FriendsPage;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/emailForm.js",["183"],"import React, { useState, useEffect }from 'react';\nimport axios from 'axios';\n\nfunction EmailForm() {\n\n    const [email, setEmail] = useState(\"\");\n    const [isError, setIsError] = useState(false);\n    const [code, setCode] = useState(\"\")\n\n    function submitEmail() {\n        if(email !== \"\") {\n            axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/forgot/sendcode/${email}`)\n                .then(response => {\n                    if(response.status === 200) {\n                        // window.location.href = `http://${process.env.REACT_APP_HOST_IP}:3000/digitCode/${email}`\n                        // get code from backend and show on page for users\n                        setCode(response.data.code);\n                    }\n                }).catch(err => {\n                    setIsError(true)\n                })\n        }\n    }\n\n    return (\n        <div class=\"fixed z-10 inset-0 overflow-y-auto shadow-2xl bg-white\">\n            <div className=\"flex items-center justify-center h-screen w-screen min-h-screen pt-4 px-4 pb-20 text-center\">\n                <div className=\"space-y-5 text-center lg:w-1/4 w-80\">\n                    {code === \"\" ? (\n                        <>\n                            <div className=\"flex flex-col items-center space-y-4\">\n                                <svg class=\"w-20 h-20 text-cornblue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5\"></path></svg>\n                                <h1 className=\"text-cornblue-400 text-3xl font-bold\">HomeCloud</h1>\n                                <h2 className=\"text-xl font-bold text-gray-800\">Email user to change password</h2>\n                                <p className=\"text-gray-500\">This emails password will be changed!</p>\n                            </div>\n                            { isError && <p className=\"text-red-500\">Email does not exist</p>}\n                            <form className=\"w-full mt-6 flex flex-col space-y-0\" onSubmit={(e)=> {e.preventDefault(); submitEmail()}}>\n                                <input type=\"text\" value={email} onChange={ (e) => setEmail(e.target.value) } placeholder=\"Email...\" class=\"h-8 p-2 block w-full text-md border border-gray-500 rounded-md focus:outline-none\"/>\n                                <input type=\"submit\" class=\"hidden\" />\n                            </form>\n                            <div className=\"mt-6 flex flex-col space-y-4\">\n                                <div className=\"w-full flex flex-col space-y-2\">\n                                    <button type=\"button\" onClick={submitEmail} className=\"w-full inline-flex justify-center rounded-lg shadow-sm py-2 bg-cornblue-400 text-cornblue-200 font-medium hover:bg-cornblue-600 focus:outline-none sm:w-auto text-md\">\n                                        Send email\n                                    </button>\n                                </div>\n                            </div>\n                        </>\n                    ) : (\n                        // showing code here\n                        <div className=\"flex flex-col items-center space-y-4\">\n                            <svg class=\"w-20 h-20 text-cornblue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5\"></path></svg>\n                            <h1 className=\"text-cornblue-400 text-3xl font-bold\">HomeCloud</h1>\n                            <h2 className=\"text-lg font-bold text-gray-800\">This is your code:</h2>\n                            <p className=\"mt-4 text-gray-500 text-2xl\">{code}</p>\n                            <button className=\"bg-cornblue-400 text-cornblue-200 py-1 rounded-md flex flex-row items-center justify-center w-64\" onClick={()=> window.location.href = `http://${process.env.REACT_APP_HOST_IP}:3000/digitCode/${email}`}>\n                                continue\n                                <svg class=\"w-6 h-6 right-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path></svg>\n                            </button>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default EmailForm;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/digitForm.js",["184","185","186"],"import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\n\nfunction DigitForm(props) {\n\n    const [code, setCode] = useState('');\n    const [isError, setIsError] = useState(false);\n    const { email } = props.match.params;\n\n    function submitDigit() {\n        if(code !== '') {\n            axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/forgot/checkcode/${email}/${code}`)\n                .then(response => {\n                    if(response.status === 200) {\n                        window.location.href = `http://${process.env.REACT_APP_HOST_IP}:3000/newPassword/${email}/${code}`;\n                    }\n                }).catch(err => {\n                    \n                })\n        }\n    }\n\n    return (\n        <div class=\"fixed z-10 inset-0 overflow-y-auto shadow-2xl bg-white\">\n            <div className=\"flex items-center justify-center h-screen w-screen min-h-screen pt-4 px-4 pb-20 text-center\">\n                <div className=\"space-y-5 text-center lg:w-1/4 w-80\">\n                    <div className=\"flex flex-col items-center space-y-4\">\n                    <svg class=\"w-20 h-20 text-cornblue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5\"></path></svg>\n                    <h1 className=\"text-cornblue-400 text-3xl font-bold\">HomeCloud</h1>\n                    <h2 className=\"text-xl font-bold text-gray-800\">Check your code for validation</h2>\n                    </div>\n                    { isError && <p className=\"text-red-500\">Code isn't right or outdated</p>}\n                    <form className=\"w-full mt-6 flex flex-col space-y-0\" onSubmit={(e)=> { e.preventDefault(); submitDigit()}}>\n                        <input type=\"text\" value={code} onChange={ (e) => setCode(e.target.value) } placeholder=\"Digit code here...\" class=\"h-8 p-2 block w-full text-md border border-gray-500 rounded-md focus:outline-none\"/>\n                        <input type=\"submit\" class=\"hidden\" />\n                    </form>\n                    <div className=\"mt-6 flex flex-col space-y-4\">\n                        <div className=\"w-full flex flex-col space-y-2\">\n                            <button type=\"button\" type=\"button\" onClick={submitDigit} className=\"w-full inline-flex justify-center rounded-lg shadow-sm py-2 bg-cornblue-400 text-cornblue-200 font-medium hover:bg-cornblue-600 focus:outline-none sm:w-auto text-md\">\n                                Check code\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default DigitForm;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/newPassword.js",["187"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction NewPassword(props) {\n\n    const [password, setPassword] = useState(''); \n    const [password2, setPassword2] = useState('');\n    const [isError, setIsError] = useState(null);\n\n    const { email, digit } = props.match.params;\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/forgot/code/${email}/${digit}`)\n            .then(response => {\n                if(response.status === 404) {\n                    console.log('Hi');\n                }\n            }).catch(e => {\n                if(e.response.status === 404) {\n                    window.location.href = `http://${process.env.REACT_APP_HOST_IP}:3000/forgot`\n                }\n            })\n    }, [])\n\n    function submitPassword() {\n        setIsError(null)\n        if(password === password2) {\n            axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/forgot/newpassword/${email}/${digit}`, {password:password})\n                .then(response => {\n                    if(response.status === 200) {\n                        window.location.href = `http://${process.env.REACT_APP_HOST_IP}:3000/login`\n                    }\n                }).catch(e => {\n                    setIsError(\"Something went wrong\")\n                })\n        } else {\n            setIsError(\"Passwords dont match\");\n        }\n    }\n\n    return (\n        <div class=\"fixed z-10 inset-0 overflow-y-auto shadow-2xl bg-white\">\n            <div className=\"flex items-center justify-center h-screen w-screen min-h-screen pt-4 px-4 pb-20 text-center\">\n                <div className=\"space-y-5 text-center lg:w-1/4 w-80\">\n                    <div className=\"flex flex-col items-center space-y-4\">\n                    <svg class=\"w-20 h-20 text-cornblue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5\"></path></svg>\n                    <h1 className=\"text-cornblue-400 text-3xl font-bold\">HomeCloud</h1>\n                    <h2 className=\"text-xl font-bold text-gray-800\">Change your password now</h2>\n                    </div>\n                    { isError !== null && <p className=\"text-red-500\">{isError}</p>}\n                    <form className=\"w-full mt-6 flex flex-col space-y-0\" onSubmit={(e)=> { e.preventDefault(); submitPassword()}}>\n                        <input type=\"password\" value={password} onChange={ (e) => setPassword(e.target.value) } placeholder=\"New password...\" class=\"h-8 p-2 block w-full text-md border border-gray-500 rounded-t-md focus:outline-none\"/>\n                        <input type=\"password\" value={password2} onChange={ (e) => setPassword2(e.target.value) } placeholder=\"Configure password...\" class=\"h-8 p-2 block w-full text-md border-l border-r border-b border-gray-500 rounded-b-md focus:outline-none\"/>\n                        <input type=\"submit\" class=\"hidden\" />\n                    </form>\n                    <div className=\"mt-6 flex flex-col space-y-4\">\n                        <div className=\"w-full flex flex-col space-y-2\">\n                            <button type=\"button\" onClick={submitPassword} className=\"w-full inline-flex justify-center rounded-lg shadow-sm py-2 bg-cornblue-400 text-cornblue-200 font-medium hover:bg-cornblue-600 focus:outline-none sm:w-auto text-md\">\n                                Change password\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default NewPassword;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/FilesPage.js",["188","189","190","191","192","193","194","195","196","197","198","199","200"],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/folders.js",["201"],"import React from 'react';\nimport axios from 'axios';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu'\nimport '../styles/react-contextmenu.css'\nimport '../styles/custom.css'\n\nconst attributes = {\n    className: 'custom-root',\n    disabledClassName: 'custom-disabled',\n    dividerClassName: 'custom-divider',\n    selectedClassName: 'custom-selected'\n}\n\nclass FolderList extends React.Component {\n    state = {\n        folders: []\n    }\n\n    constructor(props) {\n        super(props);\n        this.getFiles = this.props.getFiles;\n    }\n    \n    componentDidMount() {\n        const token = JSON.parse(localStorage.getItem('tokens'));\n        axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/folders/${token.id}`})\n            .then(res => {\n            const folders = res.data;\n            this.setState({ folders });\n        })\n    }\n\n    render() {\n        return (\n        <>\n            {this.state.folders.map(folder => (\n                <>\n                <ContextMenuTrigger id={folder.folder_id} >\n                    <a className=\"block cursor-pointer border p-4 border-gray-400 rounded-md shadow-md hover:border-cornblue-400 hover:bg-cornblue-200 hover:text-white\" href={`/collection/folder/${folder.name}/${folder.folder_id}`}>\n                        <div className=\"flex flex-row items-center space-x-2\">\n                            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"></path></svg>\n                            <strong className=\"flex-grow font-normal\">{folder.name}</strong>\n                        </div>\n                    </a>\n                </ContextMenuTrigger>\n                <ContextMenu id={folder.folder_id}>\n                    <MenuItem\n                        data={{ action: 'paste' }}\n                        onClick={() => {\n                            this.props.setFoldernameWarning(true)\n                            this.props.setFolderId(folder.folder_id)\n                        }}\n                        attributes={attributes}\n                    >\n                    Delete\n                    </MenuItem>\n                </ContextMenu>\n                </>\n            ))}\n        </>\n        )\n    }\n}\n\nconst styles = {\n    default: \"border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100 p-3 space-y-4\",\n    selected: \"border-l-2 border-blue-500 bg-blue-100 p-3 space-y-4\"\n}\n\nexport default FolderList;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/Media.js",["202","203"],"import React, { Component } from 'react';\n\nclass Media extends Component {\n    \n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            chatId: this.props.chatId,\n            media: [],\n            page: 1,\n            showImage: false,\n            image: null\n        }\n\n    }\n\n    componentDidMount() {\n        // window.addEventListener('scroll', this.infiniteScroll);\n\n        this.refs.myScroll.addEventListener('scroll', () => {\n            if(\n                this.refs.myScroll.scrollTop + this.refs.myScroll.clientHeight >= this.refs.myScroll.scrollHeight\n            ) {\n                this.infiniteScroll();\n            }\n        });\n\n        this.fetchData(this.state.page);\n    }\n\n    fetchData = (pageNum) => {\n\n        let mediaUrl = `http://${process.env.REACT_APP_HOST_IP}:3030/files/getMedia/${this.state.chatId}/page=/${this.state.page}`\n\n        fetch(mediaUrl)\n            .then(res => res.json())\n            .then(data => {\n                this.setState({\n                    media: [...this.state.media, ...data]\n                })\n            })\n    }\n\n    infiniteScroll = () => {\n\n            let newPage = this.state.page;\n            newPage++;\n\n            this.setState({\n                page: newPage\n            })\n\n            this.fetchData(newPage);\n    }\n\n    render() {\n        return (\n            <>\n                <div ref=\"myScroll\" id=\"mediaDiv\" className=\"grid grid-cols-3 gap-2 2xl:h-80 h-64 overflow-y-auto\">\n                    {this.state.media.map((item) => (\n                        <div className=\"2xl:w-28 2xl:h-28 h-24 w-24 bg-gray-500\">\n                            <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + item.path} className=\"w-full h-full object-cover\" onClick={() => this.setState({showImage: true, image: item.path})} />\n                        </div>\n                    ))}\n                </div>\n\n                {this.state.showImage && (\n                    <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                        <div className=\"block items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                                <div className=\"absolute inset-0 bg-gray-500 opacity-80\"></div>\n                            </div>\n                            <span  className=\"inline-block align-middle h-screen\" aria-hidden=\"true\">&#8203;</span>\n                            <span onClick={() => this.setState({showImage: false})} className=\"cursor-pointer focus:outline-none absolute flex flex-row justify-center items-center top-2 right-2 h-9 w-9 text-white rounded-full bg-black opacity-50\">&#10005;</span>\n                            <div className=\"inline-block overflow-hidden shadow-xl transform align-middle lg:max-w-2xl md:max-w-lg sm:max-w-md sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                                <img className=\"w-full h-full\" src={'http://' + process.env.REACT_APP_HOST_IP + ':3030' + this.state.image} />\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        )\n    }\n\n}\n\nexport default Media;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/profile.js",["204","205"],"import Axios from 'axios';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Profile extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {},\n            updatedUser: {},\n            avatar: {},\n            totalFiles: 0,\n            totalFolders: 0,\n            totalFriends: 0,\n            progress: 0,\n            space: 0,\n        }\n    }\n\n    componentDidMount() {\n        const token = JSON.parse(localStorage.getItem('tokens'));\n\n        Axios({method: 'GET', url: `http://${process.env.REACT_APP_HOST_IP}:3030/myprofile/${token.id}`})\n            .then(res => {\n                if(res.status === 200) {\n                    this.setState({\n                        user: res.data.user,\n                        updatedUser: res.data.user,\n                        totalFiles: res.data.files,\n                        totalFolders: res.data.folders,\n                        totalFriends: res.data.friends,\n                        hovered: false\n                    });\n                }\n            }).catch(e => console.log(e));\n\n        Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/directorySize/${token.id}`)\n            .then(res => {\n              if(res.status === 200) {\n                var percentage = res.data.totalSizeBytes\n                this.setState({\n                    progress: percentage,\n                    space: res.data.totalSize\n                })\n              }\n            })\n    }\n\n    UpdatingUser = (user) => {\n        const data = {\n            firstname: user.firstname,\n            lastname: user.lastname,\n            email: user.email\n        }\n\n        axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/myprofile/updateuser/${user.id}`, data)\n            .then(res => {\n                if(res.status === 200) {\n                    this.props.setIsUpdating(false);\n                    window.location.reload();\n                }\n            })\n\n    }\n\n    // UpdatingUserPic = (user) => {\n    //     console.log('pok');\n    // }\n\n    handleEvent = () => {\n        var input = document.getElementById('upload');\n        input.click();\n    }\n\n    handleChange = async (e) => {\n        const data  = new FormData();\n        data.append('file', e.target.files[0]);\n\n        const token = JSON.parse(localStorage.getItem('tokens'));\n\n        Axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/myprofile/uploadPic/${token.id}`, data, {\n            onUploadProgress: (ProgressEvent) => {\n                console.log(ProgressEvent.loaded);\n            }\n        })\n        .then((res) => {\n            if(res.status === 200) {\n                const data = {\n                    ...token,\n                    profile_pic: res.data.profile_pic\n                }\n                localStorage.setItem('tokens', JSON.stringify(data))\n                window.location.reload();\n            } else {\n                console.log(res.data);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n            <div className=\"flex flex-col w-2/3 2xl:h-1/2 bg-gray-100 rounded-2xl shadow-xl\">\n               <div className=\"flex flex-row justify-center 2xl:justify-between py-4 px-16\">\n                    <div className=\"absolute 2xl:relative hidden 2xl:flex flex-row justify-between px-6 py-2 w-72 h-16\">\n                        <div className=\"flex flex-col items-center\">\n                            <p className=\"font-medium\">{this.state.totalFiles}</p>\n                            <p className=\"font-light\">Files</p>\n                        </div>\n                        <div className=\"flex flex-col items-center\">\n                            <p className=\"font-medium\">{this.state.totalFolders}</p>\n                            <p className=\"font-light\">Folders</p>\n                        </div>\n                        <div className=\"flex flex-col items-center\">\n                            <p className=\"font-medium\">{this.state.totalFriends}</p>\n                            <p className=\"font-light\">Friends</p>\n                        </div>\n                    </div>\n                    <div onClick={this.handleEvent} id=\"div\" onMouseEnter={()=> this.setState({hovered: true})} onMouseLeave={()=> this.setState({hovered: false})} className='-mt-24 flex cursor-pointer rounded-full h-40 w-40 hover:bg-gray-200 justify-center items-center focus:outline-none shadow-2xl'>\n                        {this.state.hovered && (\n                            <svg class=\"w-10 h-10 absolute\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path></svg>\n                        )}\n                        <input type=\"file\" id=\"upload\" onChange={(e) => this.handleChange(e)} accept=\"image/*\" hidden=\"true\" />\n                        {this.state.user.profile_pic != null && <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + this.state.user.profile_pic} className=\"absolute object-cover w-40 h-40 rounded-full hover:opacity-30\" />}\n                        {this.state.user.profile_pic == null && <svg id=\"svgProfile\" class=\"w-40 h-40 text-gray-900 stroke-1 hover:opacity-10\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\n                    </div>\n                    <div className=\"absolute 2xl:relative hidden 2xl:flex flex-row w-72 h-10 py-2\">\n                        <div className=\"w-full\">\n                                <div className=\"flex mb-2 items-center justify-between\">\n                                    <div>\n                                        <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-cornblue-600 bg-cornblue-200\">\n                                            Available Space\n                                        </span>\n                                    </div>\n                                    <div className=\"flex flex-row items-center space-x-2 text-right\">\n                                        <span className=\"text-xs font-bold inline-block text-cornblue-400\">\n                                            { this.state.progress > 0 && this.state.space + '/25.0 GB' }\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"overflow-hidden h-2 text-xs flex rounded bg-cornblue-200\">\n                                    <div style={{ width: this.state.progress + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-cornblue-600\"></div>\n                                </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-14 flex flex-col flex-auto items-center space-y-10 pb-8\">\n                    <>\n                        {this.props.isUpdating ? (\n                            <div className=\"mt-12 flex flex-col 2xl:w-1/2 w-2/3\">\n                                <input className=\"h-10 border-t border-l border-r border-gray-400 rounded-t-lg p-2\" value={this.state.updatedUser.firstname} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser, firstname: e.target.value}})} type=\"text\" placeholder=\"Firstname...\"/>\n                                <input className=\"h-10 border border-gray-400 p-2\" type=\"text\" value={this.state.updatedUser.lastname} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser, lastname: e.target.value}})} placeholder=\"Lastname...\"/>\n                                <input className=\"h-10 border-b border-l border-r border-gray-400 rounded-b-lg p-2\" value={this.state.updatedUser.email} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser, email: e.target.value}})} type=\"text\" placeholder=\"Email...\"/>\n                            </div>\n                        ) : (\n                            <>\n                            <h1 className=\"font-bold text-2xl\">{this.state.user.firstname} {this.state.user.lastname}</h1>\n                            <h2 className=\"text-lg font-medium\"><span className=\"text-gray-500\">@</span> {this.state.user.email}</h2>\n                            </>\n                        )}\n                    </>\n                    <div className=\"2xl:absolute 2xl:hidden flex flex-col w-3/4 space-y-10\">\n                        <div className=\"flex flex-row flex-auto justify-center space-x-8\">\n                            <div className=\"flex flex-col items-center\">\n                                <p className=\"font-medium\">{this.state.totalFiles}</p>\n                                <p className=\"font-light\">Files</p>\n                            </div>\n                            <div className=\"flex flex-col items-center\">\n                                <p className=\"font-medium\">{this.state.totalFolders}</p>\n                                <p className=\"font-light\">Folders</p>\n                            </div>\n                            <div className=\"flex flex-col items-center\">\n                                <p className=\"font-medium\">{this.state.totalFriends}</p>\n                                <p className=\"font-light\">Friends</p>\n                            </div>\n                        </div>\n                        <div className=\"flex justify-center\">\n                            <div className=\"w-full\">\n                                    <div className=\"flex mb-2 items-center justify-between\">\n                                        <div>\n                                            <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-cornblue-600 bg-cornblue-200\">\n                                                Available Space\n                                            </span>\n                                        </div>\n                                        <div className=\"flex flex-row items-center space-x-2 text-right\">\n                                            <span className=\"text-xs font-bold inline-block text-cornblue-400\">\n                                                { this.state.progress > 0 && this.state.space + '/25.0 GB' }\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"overflow-hidden h-2 text-xs flex rounded bg-cornblue-200\">\n                                        <div style={{ width: this.state.progress + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-cornblue-600\"></div>\n                                    </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"p-6 h-24\">\n                    <div className=\"flex items-center justify-center border-t-2\">\n                        {this.props.isUpdating ? (\n                            <div className=\"mt-4 flex 2xl:flex-row flex-row space-x-4 \">\n                                <button className=\"bg-cornblue-200 text-cornblue-400 w-32 h-10 rounded-md outline-none\" onClick={() => this.props.setIsUpdating(!this.props.isUpdating)}>Cancel</button>\n                                <button className=\"bg-cornblue-400 text-cornblue-200 w-32 h-10 rounded-md outline-none\" onClick={() => this.UpdatingUser(this.state.updatedUser)}>Update Profile</button>\n                            </div>\n                        ) : (\n                            <button className=\"mt-5 font-medium text-cornblue-400 outline-none\" onClick={() => this.props.setIsUpdating(!this.props.isUpdating)}>Edit profile</button>\n                        )}\n                    </div>\n                </div>\n            </div>\n                {/* <div className='flex flex-col space-y-16 items-center p-6'>\n                    <div onClick={this.handleEvent} id=\"div\" onMouseEnter={()=> this.setState({hovered: true})} onMouseLeave={()=> this.setState({hovered: false})} className='flex cursor-pointer rounded-full h-32 w-32 hover:bg-gray-200 justify-center items-center focus:outline-none'>\n                        {this.state.hovered && (\n                            <svg class=\"w-10 h-10 absolute\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path></svg>\n                        )}\n                        <input type=\"file\" id=\"upload\" onChange={(e) => this.handleChange(e)} accept=\"image/*\" hidden=\"true\" />\n                        {this.state.user.profile_pic != null && <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + this.state.user.profile_pic} className=\"absolute object-cover w-32 h-32 rounded-full hover:opacity-10\" />}\n                        {this.state.user.profile_pic == null && <svg id=\"svgProfile\" class=\"w-32 h-32 text-gray-900 stroke-1 hover:opacity-10\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\n                    </div>\n                    <div className=\"flex flex-col items-center space-y-8\">\n                        <div className=\"flex flex-col items-center space-y-2\">\n                            {!this.props.isUpdating ? (\n                                <>\n                                <div className='flex flex-row space-x-1'>\n                                    <p>name: </p>\n                                    <p>{this.state.user.firstname}</p>\n                                    <p>{this.state.user.lastname}</p>\n                                </div>\n                                <p>email: {this.state.user.email}</p>\n                                </>\n                            ): (\n                                <div className='flex flex-col space-y-2'>\n                                    <input type=\"text\" value={this.state.updatedUser.firstname} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser, firstname: e.target.value}})} className={styles.input} />\n                                    <input type=\"text\" value={this.state.updatedUser.lastname} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser ,lastname: e.target.value}})} className={styles.input} />\n                                    <input type=\"email\" value={this.state.updatedUser.email} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser , email: e.target.value}})} className={styles.input} />\n                                </div>\n                            )}\n                        </div>\n                        {this.props.isUpdating ? (\n                            <button type=\"button\" onClick={() => this.UpdatingUser(this.state.updatedUser)} className=\"w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Update profile\n                            </button> \n                        ): (\n                            <button type=\"button\" onClick={() => this.props.setIsUpdating(!this.props.isUpdating)} className=\"w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Update profile\n                            </button> \n                        )}\n                        {this.props.isUpdating && (\n                            <button type=\"button\" onClick={() => this.props.setIsUpdating(!this.props.isUpdating)} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Cancel\n                            </button>\n                        )}\n                    </div>\n                </div> */}\n            </>\n        )\n    }\n}\n\nconst styles = {\n    input: \"w-64 h-8 p-2 focus:ring-blue-500 focus:border-blue-500 border border-blue-500 sm:text-sm rounded-md shadow-xl\"\n}\n\nexport default Profile;\n","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/transition.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/ChatPage.js",["206","207","208","209","210","211","212","213","214","215"],"import React, {useState, useEffect, useRef, useContext} from 'react';\nimport axios from 'axios';\n// import {socket} from '../App';\nimport useFileUpload from '../hooks/useFileUpload';\nimport { useParams } from 'react-router-dom';\nimport { SocketContext } from '../socketContext';\n\nlet totalPages;\nexport const ChatPage = ({friendId}) => {\n\n    const [inputMessage, setInputMessage] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [showImage, setShowImage] = useState(false);\n    const [image, setImage] = useState(null);\n\n    const token = JSON.parse(localStorage.getItem('tokens'));\n    const messageEl = useRef();\n    const socket = useContext(SocketContext)\n\n    const [chatId, setChatId] = useState(useParams().chatId);\n    const [page, setpage] = useState(null)\n\n    useEffect(()=> {\n\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/getMessages/${chatId}/page=${1}`)\n            .then(response => {\n                if (response.status === 200) {\n                    setpage(1)\n                    setMessages(response.data.messages);\n                    totalPages = response.data.total;\n                    scrollToBottom();\n                }\n            })\n        \n    }, []);\n\n    useEffect(() => {\n        socket.on('message', message => {\n            setMessages(messages => [ ...messages, message ]);\n            scrollToBottom();\n        });\n    }, [socket])\n\n    document.addEventListener('keydown', function(event){\n        if(event.key === \"Escape\"){\n          setShowImage(false);\n        }\n      });\n\n    useEffect(()=> {\n        axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/seenmessages/${chatId}/${token.id}`)            \n    }, [chatId]);\n\n    useEffect(() => {\n        if(messages.length > 0 && page <= totalPages) {\n            messageEl.current.addEventListener('scroll', (e) => {\n                // console.log(totalPages);\n                if(messageEl.current.scrollTop === 0) {\n                    infinteScroll(messages);\n                }\n            });\n        }\n    }, [messages])\n\n    function infinteScroll(oldMessages) {\n\n        let newPage = page;\n        ++newPage;\n\n        setpage(newPage);\n\n        fetchData(newPage, oldMessages);\n    }\n\n    function fetchData(newPage, oldMessages) {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/getMessages/${chatId}/page=${newPage}`)\n            .then(response => {\n                if(response.status === 200) {\n                    let newMess = [...response.data.messages, ...oldMessages]\n                    setMessages(newMess);\n                }\n            })\n    }\n\n    function sendMessage(e) {\n        e.preventDefault();\n        if(inputMessage != \"\") {\n            const data = {\n                chatId: chatId,\n                fromUser: token.id,\n                toUser: friendId,\n                message: inputMessage,\n                isImage: 0\n            };\n\n            const userId = token.id;\n            socket.emit('sendMessage', {data, chatId, friendId});\n            socket.emit('sendMelding', {userId, friendId});\n            \n            axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/sendmessage`, data)\n                .then(response => {\n                    if(response.status === 200) {\n                        setInputMessage('');\n                    };\n            });\n        };\n    };\n\n    const [ firstGetFileContext ] = useFileUpload();\n\n    function sendImage(e) {\n        if(e.target.files.length != 0){\n            firstGetFileContext('chat', e.target.files, chatId, friendId);\n        }\n    }\n\n    function scaleImage(path) {\n        setShowImage(true);\n        setImage(path);\n    }\n\n    // scroll to bottom of screen\n    const messagesEndRef = useRef(null)\n\n    const scrollToBottom = () => {\n      messagesEndRef.current.scrollIntoView()\n    }\n    \n    // useEffect(scrollToBottom, [messages]);\n\n    return (\n        <div className=\"justify-between flex flex-col h-full\">\n            <div className=\"flex flex-col p-4 space-y-4 items-start overflow-y-auto\" ref={messageEl}>\n                 {messages.map(message => (\n                     <>\n                     {message.chatId == chatId && (\n                         <>\n                         {message.isImage == 0 ? (\n                            <div className={message.fromUser === token.id ? style.sender : style.friend}>\n                                {message.message}\n                            </div>\n                         ) : (\n                            <img onClick={() => scaleImage(message.message)} className={message.fromUser === token.id ? style.senderImage : style.friendImage} src={'http://' + process.env.REACT_APP_HOST_IP + ':3030' + message.message} />\n                        )}\n                        </>\n                     )}\n                    </>\n                ))}\n                <div ref={messagesEndRef} />\n            </div>          \n            <div class=\"mt-2 border-gray-200 pt-4 mb-1 sm:mb-0\">\n                <form onSubmit={(e)=> sendMessage(e)}>\n                    <div class=\"relative flex flex-row items-center justify-between border p-1 border-black rounded-2xl\">\n                        <input type=\"text\" value={inputMessage} onChange={(e)=> setInputMessage(e.target.value)} placeholder=\"Write Something\" class=\"w-full focus:outline-none h-8 focus:placeholder-gray-400 text-gray-600 placeholder-gray-600 pl-6 py-2\" />\n                        <div class=\"items-center inset-y-0 flex\">\n                            <div className=\"cursor-pointer\">\n                                <label for=\"file-input\" className=\"cursor-pointer\">\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"></path></svg>\n                                </label>\n                                <input type=\"file\" id=\"file-input\" hidden=\"true\" onChange={(e) => sendImage(e)} multiple />\n                            </div>\n                            <button type=\"submit\" onClick={(e)=> sendMessage(e)} class=\"inline-flex items-center justify-center rounded-full h-9 w-9 text-black focus:outline-none\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-send\"><line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line><polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon></svg>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n\n            {showImage && (\n                <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                    <div className=\"block items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                        <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                            <div className=\"absolute inset-0 bg-gray-500 opacity-80\"></div>\n                        </div>\n                        <span  className=\"inline-block align-middle h-screen\" aria-hidden=\"true\">&#8203;</span>\n                        <span onClick={() => setShowImage(false)} className=\"cursor-pointer focus:outline-none absolute flex flex-row justify-center items-center top-2 right-2 h-9 w-9 text-white rounded-full bg-black opacity-50\">&#10005;</span>\n                        <div className=\"inline-block overflow-hidden shadow-xl transform align-middle lg:max-w-2xl md:max-w-lg sm:max-w-md sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                            <img className=\"w-full h-full\" src={'http://' + process.env.REACT_APP_HOST_IP + ':3030' + image} />\n                        </div>\n                    </div>\n                </div>\n            )}\n\n        </div>\n    )\n}\n\nconst style = {\n\tsender: \"max-w-lg inline-block px-4 self-end py-2 bg-blue-500 rounded-t-xl rounded-bl-xl text-white\",\n\tfriend: \"max-w-lg inline-block px-4 py-2 bg-gray-200 rounded-t-xl rounded-br-xl\",\n    senderImage: \"lg:max-w-lg md:max-w-md sm:max-w-sm max-w-xs inline-block self-end rounded-t-xl rounded-bl-xl cursor-pointer\",\n    friendImage: \"lg:max-w-lg md:max-w-md sm:max-w-sm max-w-xs inline-block rounded-t-xl rounded-br-xl cursor-pointer\",\n}","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/sharedFileSlecting.js",["216"],"import React, { Component } from 'react';\nimport Axios from 'axios';\n\nlet selected = [];\n\nclass SelecingFiles extends Component {\n    \n    \n\n    constructor(props) {\n        super(props);\n        this.folderId = props.folderId;\n        this.state = {\n            files: [],\n            file: null,\n            selected: [],\n            token: JSON.parse(localStorage.getItem('tokens'))\n        }\n    }\n\n    componentDidMount() {\n        let combined = [];\n        Axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/files/getshared/${this.state.token.id}`})\n          .then(res => {\n            if(res.status === 200) {\n              if(res.data !== \"no data\") {\n                const files = res.data;\n                if(files.length > 0) {\n                    files.forEach(file => {\n                        const obj = {...file, isSelect: false};\n                        combined.push(obj);\n                    })\n                }\n                this.setState({ files: combined });\n              } \n            }\n        });\n    }\n\n    selectItem = (item) => {\n        item.isSelect = !item.isSelect;\n        if(item.isSelect){\n            const obj = {\n                name: item.name,\n                file: item.path,\n                filename: item.name,\n                is_image: item.is_image,\n                fileId: item.file_id\n            };\n            selected.push(obj);\n        } else {\n            for(let i = 0; i < selected.length; i++) {\n                if(selected[i].fileId === item.file_id) {\n                    selected.splice(i, 1)\n                }\n            }\n        }\n        this.setState({selected: selected});\n        this.props.setSelected(selected)\n    };\n    \n    render() {\n        return (\n            <div className=\"mt-4 flex-auto overflow-y-auto grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4\">\n            {this.state.files.map((file => {\n                return (\n                    <div className={file.isSelected ? styles.selected : styles.normal} onClick={() => {\n                        this.selectItem(file)\n                    }}>\n                        <div className=\"flex flex-row items-center\">\n                            {file.isSelect ? (\n                                <>\n                                    <svg class=\"ml-2 w-6 h-6 \" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                </>\n                            ) : (\n                                <>\n                                <svg class=\"ml-2\" width=\"1.5rem\" height=\"1.5rem\">\n                                    <circle cx=\"0.7rem\" cy=\"0.7rem\" r=\"0.50rem\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" />\n                                </svg>\n                                </>\n                            )}\n                            <a className=\"flex-auto cursor-pointer \">\n                                <div className=\"p-3 space-y-4\">\n                                    <div className=\"flex flex-row items-center space-x-2\">\n                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                        <strong className=\"flex-grow text-sm font-normal\">{file.name}</strong>\n                                    </div>\n                                </div>\n                            </a>\n\n                        </div>\n                    </div>\n            )\n            }))}\n            \n            </div>\n        )\n    }\n}\n\nconst styles = {\n    selected: \"border border-cornblue-400 rounded-md shadow-md bg-cornblue-200 text-white\",\n    normal: \"border border-gray-400 rounded-md shadow-md hover:border-cornblue-400 hover:bg-cornblue-200 hover:text-white\"\n}\n\nexport default SelecingFiles;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/hooks/useFileDownloader.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/NavBar.js",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242"],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/files.js",["243","244"],"import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { render } from 'react-dom'\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from 'react-contextmenu'\nimport '../styles/react-contextmenu.css'\nimport '../styles/custom.css'\n\nconst attributes = {\n    className: 'custom-root',\n    disabledClassName: 'custom-disabled',\n    dividerClassName: 'custom-divider',\n    selectedClassName: 'custom-selected'\n}\n\nclass File extends Component {\n\n    \n    constructor(props) {\n        super(props);\n        this.folderId = props.folderId;\n        this.fileshowing = props.fileShowing;\n        this.state = {\n            files: [],\n            file: null,\n        }\n    }\n\n    componentDidMount() {\n        Axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/folders/folder/` + this.folderId})\n          .then(res => {\n            if(res.status === 200) {\n              if(res.data !== \"no data\") {\n                const files = res.data;\n                this.setState({ files });\n              } \n            }\n        });\n    }\n    \n    render() {\n\n        return (\n            <>\n            {this.state.files.map((file => {\n                return (\n                    <>\n                    <ContextMenuTrigger id={file.file_id}>\n                        <div className=\"block cursor-pointer border border-gray-400 rounded-md shadow-md hover:border-cornblue-400 hover:bg-cornblue-200 hover:text-white overflow-hidden\">\n                            <div className=\"flex flex-row items-center\">\n                                <a className=\"flex-auto cursor-pointer\" onClick={() => {\n                                    this.fileshowing(file.path, file.name, file.is_image, file.file_id, file.created_at);\n                                }}>\n                                    <div className=\"p-3 space-y-4\">\n                                        <div className=\"flex flex-row items-center space-x-2 overflow-hidden\">\n                                            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                            <strong className=\"flex-grow text-sm font-normal\">{file.name}</strong>\n                                        </div>\n                                    </div>\n                                </a>\n                            </div>\n                        </div>\n                    </ContextMenuTrigger>\n                    <ContextMenu id={file.file_id}>\n                        <MenuItem\n                            data={{ action: 'copy' }}\n                            onClick={() => this.props.renameFile(file)}\n                            attributes={attributes}\n                        >\n                        Rename\n                        </MenuItem>\n                        <MenuItem\n                            data={{ action: 'paste' }}\n                            onClick={() => {this.props.setShowSharedModal(true)\n                                 this.props.setFile({fileId: file.file_id})}}\n                            attributes={attributes}\n                        >\n                        Share file\n                        </MenuItem>\n                        <MenuItem\n                            data={{ action: 'paste' }}\n                            onClick={() => this.props.downloadFunction(file.name, file.path, file.name, file.is_image)}\n                            attributes={attributes}\n                        >\n                        Download\n                        </MenuItem>\n                        <MenuItem divider />\n                        <MenuItem\n                            data={{ action: 'delete' }}\n                            onClick={() => this.props.deletefile(file.file_id)}\n                            attributes={attributes}\n                        >\n                        Delete\n                        </MenuItem>\n                  </ContextMenu>\n                  </>\n                )\n            }))}\n            \n            </>\n        )\n    }\n}\n\nexport default File;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/SelectingFiles.js",["245","246"],"import React, { Component } from 'react';\nimport Axios from 'axios';\n\nlet selected = [];\n\nclass SelecingFiles extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.folderId = props.folderId;\n        this.state = {\n            files: [],\n            file: null,\n            selected: []\n        }\n    }\n\n    componentDidMount() {\n        let combined = [];\n        Axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/folders/folder/` + this.folderId})\n          .then(res => {\n            if(res.status === 200) {\n              if(res.data !== \"no data\") {\n                const files = res.data;\n                if(files.length > 0) {\n                    files.forEach(file => {\n                        const obj = {...file, isSelect: false};\n                        combined.push(obj);\n                    })\n                }\n                this.setState({ files: combined });\n              } \n            }\n        });\n    }\n\n    selectItem = (item) => {\n        item.isSelect = !item.isSelect;\n        if(item.isSelect){\n            const obj = {\n                name: item.name,\n                file: item.path,\n                filename: item.name,\n                is_image: item.is_image,\n                fileId: item.file_id\n            };\n            selected.push(obj);\n        } else {\n            for(let i = 0; i < selected.length; i++) {\n                if(selected[i].fileId === item.file_id) {\n                    selected.splice(i, 1)\n                }\n            }\n        }\n        this.setState({selected: selected});\n        this.props.setSelected(selected)\n    };\n\n    selectAll = () => {\n        var filteredFiles = []\n\n        for(let file of this.state.files) {\n            if(!this.state.selected.find(selected => selected.fileId == file.file_id))filteredFiles.push(file)\n        }\n        if(this.state.selected.length < this.state.files.length) {\n            filteredFiles.forEach(item => {\n                item.isSelect = true;\n                if(item.isSelect){\n                    const obj = {\n                        name: item.name,\n                        file: item.path,\n                        filename: item.name,\n                        is_image: item.is_image,\n                        fileId: item.file_id\n                    };\n                    selected.push(obj);\n                }\n            });\n        } else {\n            console.log(\"helll\");\n            this.state.files.forEach(item => {\n                item.isSelect = false;\n                for(let i = 0; i < selected.length; i++) {\n                    if(selected[i].fileId === item.file_id) {\n                        selected.splice(i, 1)\n                    }\n                }\n            });\n        }\n\n        this.setState({selected: selected});\n        this.props.setSelected(selected)\n    }\n    \n    render() {\n        return (\n            <div>\n                <button className=\"p-1 rounded-md absolute right-2 top-24 focus:outline-none border bg-cornblue-200 border-cornblue-400 hover:bg-cornblue-400 text-cornblue-600 hover:text-cornblue-200\" onClick={this.selectAll}>Select all</button>\n                <div className=\"mt-4 flex-auto overflow-y-auto grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4\">\n                {this.state.files.map((file => {\n                    return (\n                        <div className={file.isSelected ? styles.selected : styles.normal} onClick={() => {\n                            this.selectItem(file)\n                        }}>\n                            <div className=\"flex flex-row items-center\">\n                                {file.isSelect ? (\n                                    <>\n                                    <svg class=\"ml-2 w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                    </>\n                                ) : (\n                                    <>\n                                    <svg class=\"ml-2\" width=\"1.5rem\" height=\"1.5rem\">\n                                        <circle cx=\"0.7rem\" cy=\"0.7rem\" r=\"0.50rem\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" />\n                                    </svg>\n                                    </>\n                                )}\n                                <a className=\"flex-auto cursor-pointer \">\n                                    <div className=\"p-3 space-y-4\">\n                                        <div className=\"flex flex-row items-center space-x-2\">\n                                            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                            <strong className=\"flex-grow text-sm font-normal\">{file.name}</strong>\n                                        </div>\n                                    </div>\n                                </a>\n\n                            </div>\n                        </div>\n                        )  \n                    }))}\n                </div>\n            \n            </div>\n        )\n    }\n}\n\nconst styles = {\n    selected: \"border border-cornblue-400 rounded-md shadow-md bg-cornblue-200 text-white\",\n    normal: \"border border-gray-400 rounded-md shadow-md hover:border-cornblue-400 hover:bg-cornblue-200 hover:text-white\"\n}\n\nexport default SelecingFiles;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/Message.js",["247","248"],"import React, { Component } from 'react';\n\nclass Message extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"Simple message\",\n            isError: false,\n        }\n    }\n\n    closeMessage = (i) => {\n        if(i == \"succesMessage\"){\n            document.getElementById('succesMessage').style.visibility = \"hidden\";\n        }\n\n        if(i == \"errorMessage\"){\n            document.getElementById('errorMessage').style.visibility = \"hidden\";\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"fixed w-full flex items-center mt-2\">\n                {this.state.isError ? (\n                    <div id=\"errorMessage\" class=\"z-20 flex justify-center items-center m-auto font-medium py-1 px-2 rounded-md text-red-700 bg-red-100 border border-red-300\">\n                        <div slot=\"avatar\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-alert-octagon w-5 h-5 mx-2\">\n                                <polygon points=\"7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2\"></polygon>\n                                <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"12\"></line>\n                                <line x1=\"12\" y1=\"16\" x2=\"12.01\" y2=\"16\"></line>\n                            </svg>\n                        </div>\n                        <div class=\"text-xl font-normal  max-w-full flex-initial\"> {this.state.message} </div>\n                        <div class=\"flex flex-auto flex-row-reverse\">\n                            <div>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-x cursor-pointer hover:text-red-400 rounded-full w-5 h-5 ml-2\">\n                                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                                </svg>\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    <div id=\"succesMessage\" class=\"z-20 flex justify-center items-center m-auto font-medium py-1 px-2 rounded-md text-green-700 bg-green-100 border border-green-300 \">\n                        <div slot=\"avatar\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-check-circle w-5 h-5 mx-2\">\n                                <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n                                <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n                            </svg>\n                        </div>\n                        <div class=\"text-xl font-normal  max-w-full flex-initial\"> {this.state.message} </div>\n                        <button class=\"flex flex-auto flex-row-reverse\" onClick={()=> this.closeMessage(\"succesMessage\")}>\n                            <div>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-x cursor-pointer hover:text-green-400 rounded-full w-5 h-5 ml-2\">\n                                    <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                                    <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                                </svg>\n                            </div>\n                        </button>\n                    </div>\n                )}\n            </div>\n        )\n    }\n\n}\n\nexport default Message;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/hooks/useFileUpload.js",["249","250","251","252","253","254","255","256","257","258"],"import React, { useState, useEffect, useParams } from 'react';\nimport axios from 'axios';\nimport {socket} from '../App';\n\nlet chunkSize = 1024*1024;\n\nconst useFileUpload = () => {\n\n    const [folderName, setFolderName] = useState(null);\n    const [files, setFiles] = useState({});\n    const [counter, setCounter] = useState(1)\n    const [fileToBeUpload, setFileToBeUpload] = useState({})\n    const [beginingOfTheChunk, setBeginingOfTheChunk] = useState(0)\n    const [endOfTheChunk, setEndOfTheChunk] = useState(chunkSize)\n    const [progress, setProgress] = useState(0)\n    const [fileSize, setFileSize] = useState(0)\n    const [chunkCount, setChunkCount] = useState(0);\n    const [fileOnSelected, setFileOnSelected] = useState(0);\n    const [chatId, setChatId] = useState(null);\n    const [toUser, setToUser] = useState(null);\n    const [newFilename, setNewFilename] = useState(null);\n    // const token = JSON.parse(localStorage.getItem('tokens'));\n\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    let dateNow = Date.now();\n    // const totalCapacity = 26843545600;\n\n    const firstGetFileContext = (foldername, files, chatId, toUser) => {\n\n        setFolderName(foldername);\n        setFiles(files);\n        setChatId( chatId );\n        setToUser( toUser );\n\n        // console.log(foldername);\n\n        resetChunkProperties();\n        setCounter(1);\n\n        let numb = fileOnSelected;\n\n        if(files[numb].size > 104857600) {\n            chunkSize = 10 * 1024 * 1024;\n        }\n\n        const token = JSON.parse(localStorage.getItem('tokens'));\n\n        const fileName = dateNow + '-' + files[numb].name;\n        //5368709120 == 5 GB\n        //52428800 == 50 MB\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/files/openStream/${chatId}/${foldername}/${fileName}`, {\n            cancelToken: source.token\n        })\n            .then(async response => {\n                if(response.status === 200) {\n                    setFileSize(files[numb].size);\n                    setNewFilename(response.data.fileName);\n\n                    const _totalCount = files[numb].size % chunkSize == 0 ? files[numb].size / chunkSize : Math.floor(files[numb].size / chunkSize) + 1;\n                    setChunkCount(_totalCount);\n\n                    setFileToBeUpload(files[numb]);\n                }\n            });\n    }\n\n    const getFileContext = () => {\n        resetChunkProperties();\n        setCounter(1);\n\n        let numb = fileOnSelected + 1;\n\n        if(files[numb].size > 104857600) {\n            chunkSize = 10 * 1024 * 1024;\n        }\n    \n        const token = JSON.parse(localStorage.getItem('tokens'));\n\n        const fileName = dateNow + '-' + files[numb].name;\n         \n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/files/openStream/${chatId}/${folderName}/${fileName}`, {\n            cancelToken: source.token\n        })\n            .then(async response => {\n                if(response.status === 200) {\n                    setFileSize(files[numb].size);\n                    setNewFilename(response.data.fileName);\n\n                    const _totalCount = files[numb].size % chunkSize == 0 ? files[numb].size / chunkSize : Math.floor(files[numb].size / chunkSize) + 1;\n                    setChunkCount(_totalCount);\n\n                    setFileToBeUpload(files[numb]);\n\n                    setFileOnSelected(fileOnSelected + 1);\n                }\n            });\n    }\n\n    const resetChunkProperties = () => {\n        setProgress(0);\n        setCounter(1);\n        setBeginingOfTheChunk(0);\n        setEndOfTheChunk(chunkSize);\n        setFileSize(0);\n        setChunkCount(0);\n        setFileToBeUpload({});\n    }\n\n    useEffect(() => {\n        if (fileSize > 0) {\n            fileUpload(counter);\n        }\n    }, [fileToBeUpload, progress]);\n\n    const fileUpload = () => {\n        setCounter(counter + 1);\n        if (counter <= chunkCount) {\n          var chunk = fileToBeUpload.slice(beginingOfTheChunk, endOfTheChunk);\n          uploadChunk(chunk)\n        }\n    }\n\n    const uploadChunk = async (chunk) => {\n        try {\n            const response = await axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/files/UploadChunks`, chunk, {\n                headers: {\n                    'Content-Type': 'application/octet-stream',\n                },\n                cancelToken: source.token\n            });\n\n            const data = response.data;\n\n            if (response.status === 200) {\n                let numb = fileOnSelected;\n                if(files[numb].size > 104857600) {\n                    chunkSize = 10 * 1024 * 1024;\n                }\n\n                setBeginingOfTheChunk(endOfTheChunk);\n                setEndOfTheChunk(endOfTheChunk + chunkSize);\n\n                if(counter == chunkCount) {\n                    console.log('Process is complete, counter', counter)\n                    await uploadCompleted();\n                } else {\n                    var percentage = Math.floor((counter / chunkCount) * 100);\n                    setProgress(percentage);\n                }\n            } else {\n                console.log('Error Occurred:', data)\n            }\n        } catch (error) {\n            console.log('error', error)\n        }\n    }\n\n    const uploadCompleted = async () => {\n\n        if(files.length > 1) {\n            setFileOnSelected(fileOnSelected + 1);\n        }\n\n        const token = JSON.parse(localStorage.getItem('tokens'));\n\n        let numb = 0;\n\n        if(files.length > 1) {\n            numb = fileOnSelected;\n        }\n\n        const response = await axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/files/addfiles/${token.id}/${folderName}/${newFilename}`, {chatId: chatId});\n\n        if (response.status === 200) {\n\n            const userId = token.id;\n            const friendId = toUser;\n\n            const data = {\n                chatId: chatId,\n                fromUser: token.id,\n                toUser: friendId,\n                message: `/${folderName}/${chatId}/${newFilename}`,\n                isImage: true\n            };\n\n            socket.emit('sendMessage', {data, chatId, friendId});\n            socket.emit('sendMelding', {userId, friendId});\n\n            // send message to chat\n            axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/sendimage`, {\n                chatId: chatId,\n                fromUser: token.id,\n                toUser: toUser,\n                message: `/${folderName}/${chatId}/${newFilename}`\n            }).then(resp => {\n                if(resp.status === 200) {\n                    setProgress(100);\n                    if(files.length == 1) {\n                        setTimeout(() => {\n                            resetChunkProperties();\n                        }, 1000);\n                    } else {\n                        if(files.length - 1 === fileOnSelected) {\n                            setTimeout(() => {\n                                resetChunkProperties();\n                            }, 1000);\n                        } else {\n                            setTimeout(() => {\n                                getFileContext();\n                            }, 1000);\n                        }\n                    }\n                }\n            })\n        }\n    }\n\n    return [\n        (foldername, files, chatId, toUser) => firstGetFileContext(foldername, files, chatId, toUser)\n    ]\n}\n\nexport default useFileUpload;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/Downloader.js",["259","260"],"import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\n\nconst Downloader = ({ files = [], remove }) => {\n    return (\n        <div className=\"fixed bg-white w-96 min-h-down right-2 bottom-2 max-h-60 overflow-y-auto border rounded-xl shadow-xl\">\n            <div>\n                <div className=\"bg-cornblue-400 text-center font-bold text-cornblue-200 p-2 shadow-md\">File Downloader</div>\n                <ul className=\"max-h-48 p-4 overflow-hidden overflow-y-auto\">\n                    {files.map((file, idx) => {\n                        if(file.is_folder) {\n                            return (<DonwloadFolder \n                                key={idx}\n                                removeFile={()=> remove(file.downloadId)}\n                                name={file.name}\n                                folder={file.folder}\n                            />)\n                        } else {\n                            return(<DownloadItem\n                                key={idx}\n                                removeFile={() => remove(file.downloadId)}\n                                {...file}\n                            />)\n                        }\n                    })}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nconst DownloadItem = ({ name, file, filename, removeFile }) => {\n    const CancelToken = Axios.CancelToken;\n    const source = CancelToken.source();\n\n    const [downloadInfo, setDownloadInfo] = useState({\n        progress: 0,\n        completed: false,\n        total: 0,\n        loaded: 0\n    });\n\n    useEffect(() => {\n        const options = {\n            onDownloadProgress: (progressEvent) => {\n                const { loaded, total } = progressEvent;\n\n                setDownloadInfo({\n                    progress: Math.floor((loaded * 100) / total),\n                    loaded,\n                    total,\n                    completed: false,\n                })\n            }\n        }\n\n        Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030` + file, {\n                responseType: \"blob\",\n                ...options,\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                    'Access-Control-Allow-Origin': '*'\n                },\n                cancelToken: source.token\n            }).then(function (response) {\n        \n            const url = window.URL.createObjectURL(\n                new Blob([response.data], {\n                type: response.headers[\"content-type\"],\n                })\n            );\n        \n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.setAttribute(\"download\", filename);\n            document.body.appendChild(link);\n            link.click();\n        \n            setDownloadInfo((info) => ({\n                ...info,\n                completed: true,\n            }));\n        \n            setTimeout(() => {\n                removeFile();\n            }, 4000);\n        });\n    }, []);\n\n    return (\n        <li className=\"w-full h-16 border-b \">\n            <div>\n            <div className=\"relative pt-2\">\n                <div className=\"flex mb-2 items-center justify-between\">\n                    <div>\n                        <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-blue-600 bg-blue-200\">\n                            {name}\n                        </span>\n                    </div>\n                    <div className=\"flex flex-row items-center space-x-2 text-right\">\n                        <span className=\"text-xs font-semibold inline-block text-blue-600\">\n                            { downloadInfo.loaded > 0 && downloadInfo.progress + '%'}\n                            { downloadInfo.loaded === 0 && 'Initializing...'}\n                        </span>\n                        <button onClick={async ()=> {\n                            await removeFile()\n                            source.cancel();\n                        }}>\n                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"rgba(37, 99, 235)\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"overflow-hidden h-2 text-xs flex rounded bg-blue-200\">\n                    <div style={{ width: downloadInfo.progress + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-blue-500\"></div>\n                </div>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nconst DonwloadFolder = ({name, folder, removeFile}) => {\n    const CancelToken = Axios.CancelToken;\n    const source = CancelToken.source();\n\n    const [downloadInfo, setDownloadInfo] = useState({\n        progress: 0,\n        completed: false,\n        total: 0,\n        loaded: 0\n    });\n\n    useEffect(() => {\n        const options = {\n            onDownloadProgress: (progressEvent) => {\n                const { loaded, total } = progressEvent;\n\n                setDownloadInfo({\n                    progress: Math.floor((loaded * 100) / total),\n                    loaded,\n                    total,\n                    completed: false,\n                })\n            }\n        }\n\n        Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/folders/getfolder/` + folder, {\n                responseType: \"blob\",\n                ...options,\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                    'Access-Control-Allow-Origin': '*'\n                },\n                cancelToken: source.token\n            }).then(function (response) {\n            console.log(response);\n        \n            const url = window.URL.createObjectURL(\n                new Blob([response.data], {\n                type: response.headers[\"content-type\"],\n                })\n            );\n        \n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.setAttribute(\"download\", name);\n            document.body.appendChild(link);\n            link.click();\n        \n            setDownloadInfo((info) => ({\n                ...info,\n                completed: true,\n            }));\n        \n            setTimeout(() => {\n                removeFile();\n            }, 4000);\n        });\n    }, []);\n\n    return (\n        <li className=\"w-full h-16 border-b \">\n            <div>\n            <div className=\"relative pt-2\">\n                <div className=\"flex mb-2 items-center justify-between\">\n                    <div>\n                        <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-blue-600 bg-blue-200\">\n                            {name}\n                        </span>\n                    </div>\n                    <div className=\"flex flex-row items-center space-x-2 text-right\">\n                        <span className=\"text-xs font-semibold inline-block text-blue-600\">\n                            { downloadInfo.loaded > 0 && downloadInfo.progress + '%'}\n                            { downloadInfo.loaded === 0 && 'Initializing...'}\n                        </span>\n                        <button onClick={async ()=> {\n                            await removeFile()\n                            source.cancel();\n                        }}>\n                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"rgba(37, 99, 235)\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"overflow-hidden h-2 text-xs flex rounded bg-blue-200\">\n                    <div style={{ width: downloadInfo.progress + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-blue-500\"></div>\n                </div>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default Downloader;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/ProgressBar.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/CircleProgress.js",[],{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":122,"column":49,"nodeType":"267","endLine":122,"endColumn":185},{"ruleId":"268","severity":1,"message":"269","line":195,"column":50,"nodeType":"267","endLine":195,"endColumn":127},{"ruleId":"270","severity":1,"message":"271","line":21,"column":22,"nodeType":"272","messageId":"273","endLine":21,"endColumn":33},{"ruleId":"270","severity":1,"message":"274","line":22,"column":22,"nodeType":"272","messageId":"273","endLine":22,"endColumn":33},{"ruleId":"275","severity":1,"message":"276","line":34,"column":54,"nodeType":"277","messageId":"278","endLine":34,"endColumn":56},{"ruleId":"275","severity":1,"message":"279","line":36,"column":41,"nodeType":"277","messageId":"278","endLine":36,"endColumn":43},{"ruleId":"280","severity":1,"message":"281","line":47,"column":8,"nodeType":"282","endLine":47,"endColumn":28,"suggestions":"283"},{"ruleId":"280","severity":1,"message":"284","line":69,"column":8,"nodeType":"282","endLine":69,"endColumn":16,"suggestions":"285"},{"ruleId":"280","severity":1,"message":"286","line":81,"column":8,"nodeType":"282","endLine":81,"endColumn":10,"suggestions":"287"},{"ruleId":"275","severity":1,"message":"276","line":88,"column":33,"nodeType":"277","messageId":"278","endLine":88,"endColumn":35},{"ruleId":"275","severity":1,"message":"276","line":89,"column":49,"nodeType":"277","messageId":"278","endLine":89,"endColumn":51},{"ruleId":"288","severity":1,"message":"289","line":128,"column":32,"nodeType":"290","messageId":"291","endLine":128,"endColumn":34},{"ruleId":"288","severity":1,"message":"289","line":128,"column":47,"nodeType":"290","messageId":"291","endLine":128,"endColumn":49},{"ruleId":"288","severity":1,"message":"292","line":128,"column":47,"nodeType":"290","messageId":"291","endLine":128,"endColumn":49},{"ruleId":"288","severity":1,"message":"292","line":128,"column":63,"nodeType":"290","messageId":"291","endLine":128,"endColumn":65},{"ruleId":"265","severity":1,"message":"266","line":154,"column":41,"nodeType":"267","endLine":160,"endColumn":44},{"ruleId":"275","severity":1,"message":"279","line":161,"column":108,"nodeType":"277","messageId":"278","endLine":161,"endColumn":110},{"ruleId":"268","severity":1,"message":"269","line":165,"column":65,"nodeType":"267","endLine":165,"endColumn":199},{"ruleId":"275","severity":1,"message":"279","line":173,"column":83,"nodeType":"277","messageId":"278","endLine":173,"endColumn":85},{"ruleId":"275","severity":1,"message":"279","line":173,"column":128,"nodeType":"277","messageId":"278","endLine":173,"endColumn":130},{"ruleId":"275","severity":1,"message":"279","line":174,"column":81,"nodeType":"277","messageId":"278","endLine":174,"endColumn":83},{"ruleId":"268","severity":1,"message":"269","line":238,"column":41,"nodeType":"267","endLine":238,"endColumn":183},{"ruleId":"270","severity":1,"message":"293","line":31,"column":26,"nodeType":"272","messageId":"273","endLine":31,"endColumn":40},{"ruleId":"280","severity":1,"message":"284","line":60,"column":8,"nodeType":"282","endLine":60,"endColumn":10,"suggestions":"294"},{"ruleId":"265","severity":1,"message":"266","line":126,"column":61,"nodeType":"267","endLine":126,"endColumn":179},{"ruleId":"265","severity":1,"message":"266","line":160,"column":65,"nodeType":"267","endLine":160,"endColumn":183},{"ruleId":"268","severity":1,"message":"269","line":211,"column":58,"nodeType":"267","endLine":211,"endColumn":139},{"ruleId":"270","severity":1,"message":"295","line":20,"column":12,"nodeType":"272","messageId":"273","endLine":20,"endColumn":25},{"ruleId":"270","severity":1,"message":"296","line":24,"column":12,"nodeType":"272","messageId":"273","endLine":24,"endColumn":28},{"ruleId":"280","severity":1,"message":"284","line":34,"column":8,"nodeType":"282","endLine":34,"endColumn":10,"suggestions":"297"},{"ruleId":"270","severity":1,"message":"298","line":79,"column":14,"nodeType":"272","messageId":"273","endLine":79,"endColumn":33},{"ruleId":"268","severity":1,"message":"269","line":129,"column":65,"nodeType":"267","endLine":129,"endColumn":195},{"ruleId":"268","severity":1,"message":"269","line":162,"column":49,"nodeType":"267","endLine":162,"endColumn":183},{"ruleId":"270","severity":1,"message":"299","line":1,"column":27,"nodeType":"272","messageId":"273","endLine":1,"endColumn":36},{"ruleId":"270","severity":1,"message":"299","line":1,"column":27,"nodeType":"272","messageId":"273","endLine":1,"endColumn":36},{"ruleId":"270","severity":1,"message":"300","line":7,"column":21,"nodeType":"272","messageId":"273","endLine":7,"endColumn":31},{"ruleId":"301","severity":1,"message":"302","line":39,"column":51,"nodeType":"303","endLine":39,"endColumn":64},{"ruleId":"280","severity":1,"message":"304","line":23,"column":8,"nodeType":"282","endLine":23,"endColumn":10,"suggestions":"305"},{"ruleId":"270","severity":1,"message":"306","line":10,"column":8,"nodeType":"272","messageId":"273","endLine":10,"endColumn":15},{"ruleId":"270","severity":1,"message":"307","line":17,"column":22,"nodeType":"272","messageId":"273","endLine":17,"endColumn":35},{"ruleId":"270","severity":1,"message":"308","line":29,"column":10,"nodeType":"272","messageId":"273","endLine":29,"endColumn":18},{"ruleId":"270","severity":1,"message":"309","line":30,"column":10,"nodeType":"272","messageId":"273","endLine":30,"endColumn":19},{"ruleId":"270","severity":1,"message":"310","line":51,"column":18,"nodeType":"272","messageId":"273","endLine":51,"endColumn":27},{"ruleId":"280","severity":1,"message":"284","line":65,"column":6,"nodeType":"282","endLine":65,"endColumn":8,"suggestions":"311"},{"ruleId":"270","severity":1,"message":"312","line":71,"column":36,"nodeType":"272","messageId":"273","endLine":71,"endColumn":50},{"ruleId":"275","severity":1,"message":"279","line":118,"column":30,"nodeType":"277","messageId":"278","endLine":118,"endColumn":32},{"ruleId":"275","severity":1,"message":"276","line":233,"column":28,"nodeType":"277","messageId":"278","endLine":233,"endColumn":30},{"ruleId":"265","severity":1,"message":"266","line":432,"column":27,"nodeType":"267","endLine":432,"endColumn":163},{"ruleId":"268","severity":1,"message":"269","line":468,"column":42,"nodeType":"267","endLine":468,"endColumn":119},{"ruleId":"265","severity":1,"message":"266","line":622,"column":37,"nodeType":"267","endLine":622,"endColumn":116},{"ruleId":"268","severity":1,"message":"269","line":627,"column":47,"nodeType":"267","endLine":627,"endColumn":179},{"ruleId":"270","severity":1,"message":"313","line":65,"column":7,"nodeType":"272","messageId":"273","endLine":65,"endColumn":13},{"ruleId":"268","severity":1,"message":"269","line":64,"column":29,"nodeType":"267","endLine":64,"endColumn":212},{"ruleId":"268","severity":1,"message":"269","line":78,"column":33,"nodeType":"267","endLine":78,"endColumn":143},{"ruleId":"268","severity":1,"message":"269","line":125,"column":65,"nodeType":"267","endLine":125,"endColumn":234},{"ruleId":"270","severity":1,"message":"313","line":261,"column":7,"nodeType":"272","messageId":"273","endLine":261,"endColumn":13},{"ruleId":"270","severity":1,"message":"314","line":20,"column":20,"nodeType":"272","messageId":"273","endLine":20,"endColumn":29},{"ruleId":"280","severity":1,"message":"315","line":35,"column":8,"nodeType":"282","endLine":35,"endColumn":10,"suggestions":"316"},{"ruleId":"280","severity":1,"message":"284","line":52,"column":8,"nodeType":"282","endLine":52,"endColumn":16,"suggestions":"317"},{"ruleId":"280","severity":1,"message":"318","line":63,"column":8,"nodeType":"282","endLine":63,"endColumn":18,"suggestions":"319"},{"ruleId":"275","severity":1,"message":"276","line":87,"column":25,"nodeType":"277","messageId":"278","endLine":87,"endColumn":27},{"ruleId":"275","severity":1,"message":"276","line":112,"column":34,"nodeType":"277","messageId":"278","endLine":112,"endColumn":36},{"ruleId":"275","severity":1,"message":"279","line":136,"column":38,"nodeType":"277","messageId":"278","endLine":136,"endColumn":40},{"ruleId":"275","severity":1,"message":"279","line":138,"column":43,"nodeType":"277","messageId":"278","endLine":138,"endColumn":45},{"ruleId":"268","severity":1,"message":"269","line":143,"column":29,"nodeType":"267","endLine":143,"endColumn":238},{"ruleId":"268","severity":1,"message":"269","line":179,"column":29,"nodeType":"267","endLine":179,"endColumn":128},{"ruleId":"265","severity":1,"message":"266","line":82,"column":29,"nodeType":"267","endLine":82,"endColumn":70},{"ruleId":"270","severity":1,"message":"320","line":8,"column":8,"nodeType":"272","messageId":"273","endLine":8,"endColumn":21},{"ruleId":"280","severity":1,"message":"284","line":23,"column":8,"nodeType":"282","endLine":23,"endColumn":10,"suggestions":"321"},{"ruleId":"270","severity":1,"message":"322","line":32,"column":24,"nodeType":"272","messageId":"273","endLine":32,"endColumn":37},{"ruleId":"270","severity":1,"message":"323","line":51,"column":12,"nodeType":"272","messageId":"273","endLine":51,"endColumn":21},{"ruleId":"270","severity":1,"message":"324","line":51,"column":23,"nodeType":"272","messageId":"273","endLine":51,"endColumn":35},{"ruleId":"270","severity":1,"message":"325","line":52,"column":12,"nodeType":"272","messageId":"273","endLine":52,"endColumn":25},{"ruleId":"270","severity":1,"message":"326","line":52,"column":27,"nodeType":"272","messageId":"273","endLine":52,"endColumn":43},{"ruleId":"280","severity":1,"message":"284","line":72,"column":8,"nodeType":"282","endLine":72,"endColumn":10,"suggestions":"327"},{"ruleId":"275","severity":1,"message":"279","line":175,"column":74,"nodeType":"277","messageId":"278","endLine":175,"endColumn":76},{"ruleId":"275","severity":1,"message":"279","line":209,"column":74,"nodeType":"277","messageId":"278","endLine":209,"endColumn":76},{"ruleId":"280","severity":1,"message":"328","line":235,"column":8,"nodeType":"282","endLine":235,"endColumn":34,"suggestions":"329"},{"ruleId":"280","severity":1,"message":"284","line":244,"column":8,"nodeType":"282","endLine":244,"endColumn":10,"suggestions":"330"},{"ruleId":"275","severity":1,"message":"279","line":275,"column":29,"nodeType":"277","messageId":"278","endLine":275,"endColumn":31},{"ruleId":"275","severity":1,"message":"279","line":308,"column":30,"nodeType":"277","messageId":"278","endLine":308,"endColumn":32},{"ruleId":"275","severity":1,"message":"276","line":354,"column":51,"nodeType":"277","messageId":"278","endLine":354,"endColumn":53},{"ruleId":"265","severity":1,"message":"266","line":378,"column":29,"nodeType":"267","endLine":378,"endColumn":189},{"ruleId":"275","severity":1,"message":"276","line":383,"column":55,"nodeType":"277","messageId":"278","endLine":383,"endColumn":57},{"ruleId":"265","severity":1,"message":"266","line":391,"column":29,"nodeType":"267","endLine":395,"endColumn":33},{"ruleId":"265","severity":1,"message":"266","line":404,"column":33,"nodeType":"267","endLine":408,"endColumn":37},{"ruleId":"265","severity":1,"message":"266","line":414,"column":33,"nodeType":"267","endLine":418,"endColumn":37},{"ruleId":"268","severity":1,"message":"269","line":450,"column":59,"nodeType":"267","endLine":450,"endColumn":209},{"ruleId":"268","severity":1,"message":"269","line":455,"column":63,"nodeType":"267","endLine":455,"endColumn":196},{"ruleId":"275","severity":1,"message":"276","line":492,"column":67,"nodeType":"277","messageId":"278","endLine":492,"endColumn":69},{"ruleId":"275","severity":1,"message":"279","line":574,"column":73,"nodeType":"277","messageId":"278","endLine":574,"endColumn":75},{"ruleId":"275","severity":1,"message":"279","line":611,"column":73,"nodeType":"277","messageId":"278","endLine":611,"endColumn":75},{"ruleId":"275","severity":1,"message":"279","line":640,"column":61,"nodeType":"277","messageId":"278","endLine":640,"endColumn":63},{"ruleId":"270","severity":1,"message":"331","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":16},{"ruleId":"265","severity":1,"message":"266","line":50,"column":33,"nodeType":"267","endLine":52,"endColumn":36},{"ruleId":"275","severity":1,"message":"279","line":63,"column":70,"nodeType":"277","messageId":"278","endLine":63,"endColumn":72},{"ruleId":"265","severity":1,"message":"266","line":117,"column":33,"nodeType":"267","endLine":117,"endColumn":74},{"ruleId":"275","severity":1,"message":"279","line":14,"column":14,"nodeType":"277","messageId":"278","endLine":14,"endColumn":16},{"ruleId":"275","severity":1,"message":"279","line":18,"column":14,"nodeType":"277","messageId":"278","endLine":18,"endColumn":16},{"ruleId":"270","severity":1,"message":"332","line":1,"column":8,"nodeType":"272","messageId":"273","endLine":1,"endColumn":13},{"ruleId":"270","severity":1,"message":"333","line":1,"column":38,"nodeType":"272","messageId":"273","endLine":1,"endColumn":47},{"ruleId":"270","severity":1,"message":"334","line":47,"column":15,"nodeType":"272","messageId":"273","endLine":47,"endColumn":20},{"ruleId":"275","severity":1,"message":"279","line":60,"column":70,"nodeType":"277","messageId":"278","endLine":60,"endColumn":72},{"ruleId":"270","severity":1,"message":"334","line":78,"column":15,"nodeType":"272","messageId":"273","endLine":78,"endColumn":20},{"ruleId":"275","severity":1,"message":"279","line":90,"column":70,"nodeType":"277","messageId":"278","endLine":90,"endColumn":72},{"ruleId":"280","severity":1,"message":"328","line":114,"column":8,"nodeType":"282","endLine":114,"endColumn":34,"suggestions":"335"},{"ruleId":"275","severity":1,"message":"279","line":144,"column":28,"nodeType":"277","messageId":"278","endLine":144,"endColumn":30},{"ruleId":"270","severity":1,"message":"336","line":170,"column":13,"nodeType":"272","messageId":"273","endLine":170,"endColumn":17},{"ruleId":"275","severity":1,"message":"279","line":200,"column":37,"nodeType":"277","messageId":"278","endLine":200,"endColumn":39},{"ruleId":"280","severity":1,"message":"337","line":88,"column":8,"nodeType":"282","endLine":88,"endColumn":10,"suggestions":"338"},{"ruleId":"280","severity":1,"message":"339","line":179,"column":8,"nodeType":"282","endLine":179,"endColumn":10,"suggestions":"340"},"no-native-reassign",["341"],"no-negated-in-lhs",["342"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'setIdParams' is assigned a value but never used.","Identifier","unusedVar","'setIdFriend' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleChat' and 'idFriend'. Either include them or remove the dependency array.","ArrayExpression",["343"],"React Hook useEffect has a missing dependency: 'token.id'. Either include it or remove the dependency array.",["344"],"React Hook useEffect has missing dependencies: 'socket' and 'token.id'. Either include them or remove the dependency array.",["345"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'donwloadfolder' is assigned a value but never used.",["346"],"'showSearchBar' is assigned a value but never used.","'showModalRequest' is assigned a value but never used.",["347"],"'handleUpdateRequest' is defined but never used.","'useEffect' is defined but never used.","'setIsError' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'digit' and 'email'. Either include them or remove the dependency array.",["348"],"'Message' is defined but never used.","'setFoldername' is assigned a value but never used.","'progress' is assigned a value but never used.","'usedSpace' is assigned a value but never used.","'setFolder' is assigned a value but never used.",["349"],"'downloadfolder' is assigned a value but never used.","'styles' is assigned a value but never used.","'setChatId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'chatId'. Either include it or remove the dependency array.",["350"],["351"],"React Hook useEffect has missing dependencies: 'infinteScroll' and 'page'. Either include them or remove the dependency array.",["352"],"'useFileUpload' is defined but never used.",["353"],"'setFolderName' is assigned a value but never used.","'isSuccess' is assigned a value but never used.","'setIsSuccess' is assigned a value but never used.","'succesMessage' is assigned a value but never used.","'setSuccesMessage' is assigned a value but never used.",["354"],"React Hook useEffect has missing dependencies: 'counter', 'fileSize', and 'fileUpload'. Either include them or remove the dependency array.",["355"],["356"],"'render' is defined but never used.","'React' is defined but never used.","'useParams' is defined but never used.","'token' is assigned a value but never used.",["357"],"'numb' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'file', 'filename', 'removeFile', and 'source.token'. Either include them or remove the dependency array. If 'removeFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["358"],"React Hook useEffect has missing dependencies: 'folder', 'name', 'removeFile', and 'source.token'. Either include them or remove the dependency array. If 'removeFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["359"],"no-global-assign","no-unsafe-negation",{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"366","fix":"368"},{"desc":"369","fix":"370"},{"desc":"366","fix":"371"},{"desc":"372","fix":"373"},{"desc":"362","fix":"374"},{"desc":"375","fix":"376"},{"desc":"366","fix":"377"},{"desc":"366","fix":"378"},{"desc":"379","fix":"380"},{"desc":"366","fix":"381"},{"desc":"379","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},"Update the dependencies array to be: [token.id, idParams, idFriend, handleChat]",{"range":"387","text":"388"},"Update the dependencies array to be: [chatId, token.id]",{"range":"389","text":"390"},"Update the dependencies array to be: [socket, token.id]",{"range":"391","text":"392"},"Update the dependencies array to be: [token.id]",{"range":"393","text":"394"},{"range":"395","text":"394"},"Update the dependencies array to be: [digit, email]",{"range":"396","text":"397"},{"range":"398","text":"394"},"Update the dependencies array to be: [chatId]",{"range":"399","text":"400"},{"range":"401","text":"390"},"Update the dependencies array to be: [infinteScroll, messages, page]",{"range":"402","text":"403"},{"range":"404","text":"394"},{"range":"405","text":"394"},"Update the dependencies array to be: [counter, fileSize, fileToBeUpload, fileUpload, progress]",{"range":"406","text":"407"},{"range":"408","text":"394"},{"range":"409","text":"407"},"Update the dependencies array to be: [file, filename, removeFile, source.token]",{"range":"410","text":"411"},"Update the dependencies array to be: [folder, name, removeFile, source.token]",{"range":"412","text":"413"},[1872,1892],"[token.id, idParams, idFriend, handleChat]",[2499,2507],"[chatId, token.id]",[2908,2910],"[socket, token.id]",[1867,1869],"[token.id]",[1196,1198],[781,783],"[digit, email]",[2581,2583],[1228,1230],"[chatId]",[1714,1722],[2066,2076],"[infinteScroll, messages, page]",[789,791],[3018,3020],[8297,8323],"[counter, fileSize, fileToBeUpload, fileUpload, progress]",[8599,8601],[3806,3832],[2998,3000],"[file, filename, removeFile, source.token]",[6516,6518],"[folder, name, removeFile, source.token]"]